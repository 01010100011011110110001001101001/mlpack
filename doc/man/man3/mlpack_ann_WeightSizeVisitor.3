.TH "mlpack::ann::WeightSizeVisitor" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::WeightSizeVisitor \- \fBWeightSizeVisitor\fP returns the number of weights of the given module\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits static_visitor< size_t >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename LayerType > size_t \fBoperator()\fP (LayerType *layer) const "
.br
.RI "\fIReturn the number of weights\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename P > std::enable_if< !HasParametersCheck< T, P &(T::*)()>::value &&!HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, size_t >::type \fBLayerSize\fP (T *layer, P &output) const "
.br
.RI "\fIIf the module doesn't implement the Parameters() or Model() function return 0\&. \fP"
.ti -1c
.RI "template<typename T , typename P > std::enable_if< !HasParametersCheck< T, P &(T::*)()>::value &&HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, size_t >::type \fBLayerSize\fP (T *layer, P &output) const "
.br
.RI "\fIReturn the number of parameters if the module implements the Model() function\&. \fP"
.ti -1c
.RI "template<typename T , typename P > std::enable_if< HasParametersCheck< T, P &(T::*)()>::value &&!HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, size_t >::type \fBLayerSize\fP (T *layer, P &output) const "
.br
.RI "\fIReturn the number of parameters if the module implements the Parameters() function\&. \fP"
.ti -1c
.RI "template<typename T , typename P > std::enable_if< HasParametersCheck< T, P &(T::*)()>::value &&HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, size_t >::type \fBLayerSize\fP (T *layer, P &output) const "
.br
.RI "\fIReturn the accumulated number of parameters if the module implements the Parameters() and Model() function\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBWeightSizeVisitor\fP returns the number of weights of the given module\&. 
.PP
Definition at line 28 of file weight_size_visitor\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T , typename P > std::enable_if< !HasParametersCheck<T, P&(T::*)()>::value && !HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, size_t>::type mlpack::ann::WeightSizeVisitor::LayerSize (T * layer, P & output) const\fC [private]\fP"

.PP
If the module doesn't implement the Parameters() or Model() function return 0\&. 
.SS "template<typename T , typename P > std::enable_if< !HasParametersCheck<T, P&(T::*)()>::value && HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, size_t>::type mlpack::ann::WeightSizeVisitor::LayerSize (T * layer, P & output) const\fC [private]\fP"

.PP
Return the number of parameters if the module implements the Model() function\&. 
.SS "template<typename T , typename P > std::enable_if< HasParametersCheck<T, P&(T::*)()>::value && !HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, size_t>::type mlpack::ann::WeightSizeVisitor::LayerSize (T * layer, P & output) const\fC [private]\fP"

.PP
Return the number of parameters if the module implements the Parameters() function\&. 
.SS "template<typename T , typename P > std::enable_if< HasParametersCheck<T, P&(T::*)()>::value && HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, size_t>::type mlpack::ann::WeightSizeVisitor::LayerSize (T * layer, P & output) const\fC [private]\fP"

.PP
Return the accumulated number of parameters if the module implements the Parameters() and Model() function\&. 
.SS "template<typename LayerType > size_t mlpack::ann::WeightSizeVisitor::operator() (LayerType * layer) const"

.PP
Return the number of weights\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
