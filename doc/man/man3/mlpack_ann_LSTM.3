.TH "mlpack::ann::LSTM< InputDataType, OutputDataType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::LSTM< InputDataType, OutputDataType > \- An implementation of a lstm network layer\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLSTM\fP ()"
.br
.RI "\fICreate the \fBLSTM\fP object\&. \fP"
.ti -1c
.RI "\fBLSTM\fP (const size_t \fBinSize\fP, const size_t \fBoutSize\fP, const size_t \fBrho\fP)"
.br
.RI "\fICreate the \fBLSTM\fP layer object using the specified parameters\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &&, arma::Mat< eT > &&gy, arma::Mat< eT > &&g)"
.br
.RI "\fIOrdinary feed backward pass of a neural network, calculating the function f(x) by propagating x backwards trough f\&. \fP"
.ti -1c
.RI "OutputDataType const & \fBDelta\fP () const "
.br
.RI "\fIGet the delta\&. \fP"
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "\fIModify the delta\&. \fP"
.ti -1c
.RI "bool \fBDeterministic\fP () const "
.br
.RI "\fIThe value of the deterministic parameter\&. \fP"
.ti -1c
.RI "bool & \fBDeterministic\fP ()"
.br
.RI "\fIModify the value of the deterministic parameter\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBForward\fP (arma::Mat< eT > &&input, arma::Mat< eT > &&output)"
.br
.RI "\fIOrdinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBGradient\fP (arma::Mat< eT > &&input, arma::Mat< eT > &&, arma::Mat< eT > &&)"
.br
.ti -1c
.RI "OutputDataType const & \fBGradient\fP () const "
.br
.RI "\fIGet the gradient\&. \fP"
.ti -1c
.RI "OutputDataType & \fBGradient\fP ()"
.br
.RI "\fIModify the gradient\&. \fP"
.ti -1c
.RI "InputDataType const & \fBInputParameter\fP () const "
.br
.RI "\fIGet the input parameter\&. \fP"
.ti -1c
.RI "InputDataType & \fBInputParameter\fP ()"
.br
.RI "\fIModify the input parameter\&. \fP"
.ti -1c
.RI "std::vector< \fBLayerTypes\fP > & \fBModel\fP ()"
.br
.RI "\fIGet the model modules\&. \fP"
.ti -1c
.RI "OutputDataType const & \fBOutputParameter\fP () const "
.br
.RI "\fIGet the output parameter\&. \fP"
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "\fIModify the output parameter\&. \fP"
.ti -1c
.RI "OutputDataType const & \fBParameters\fP () const "
.br
.RI "\fIGet the parameters\&. \fP"
.ti -1c
.RI "OutputDataType & \fBParameters\fP ()"
.br
.RI "\fIModify the parameters\&. \fP"
.ti -1c
.RI "size_t \fBRho\fP () const "
.br
.RI "\fIGet the maximum number of steps to backpropagate through time (BPTT)\&. \fP"
.ti -1c
.RI "size_t & \fBRho\fP ()"
.br
.RI "\fIModify the maximum number of steps to backpropagate through time (BPTT)\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &ar, const unsigned int)"
.br
.RI "\fISerialize the layer\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBbackwardStep\fP"
.br
.RI "\fILocally-stored number of backward steps\&. \fP"
.ti -1c
.RI "arma::mat \fBcellActivationError\fP"
.br
.RI "\fILocally-stored cell activation error\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBcellActivationModule\fP"
.br
.RI "\fILocally-stored cell activation module\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBcellModule\fP"
.br
.RI "\fILocally-stored cell module\&. \fP"
.ti -1c
.RI "std::vector< arma::mat > \fBcellParameter\fP"
.br
.RI "\fILocally-stored cell parameters\&. \fP"
.ti -1c
.RI "OutputDataType \fBdelta\fP"
.br
.RI "\fILocally-stored delta object\&. \fP"
.ti -1c
.RI "\fBDeltaVisitor\fP \fBdeltaVisitor\fP"
.br
.RI "\fILocally-stored delta visitor\&. \fP"
.ti -1c
.RI "bool \fBdeterministic\fP"
.br
.RI "\fIIf true dropout and scaling is disabled, see notes above\&. \fP"
.ti -1c
.RI "arma::mat \fBforgetGateError\fP"
.br
.RI "\fILocally-stored foget gate error\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBforgetGateModule\fP"
.br
.RI "\fILocally-stored forget gate module\&. \fP"
.ti -1c
.RI "size_t \fBforwardStep\fP"
.br
.RI "\fILocally-stored number of forward steps\&. \fP"
.ti -1c
.RI "OutputDataType \fBgradient\fP"
.br
.RI "\fILocally-stored gradient object\&. \fP"
.ti -1c
.RI "size_t \fBgradientStep\fP"
.br
.RI "\fILocally-stored number of gradient steps\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBhiddenStateModule\fP"
.br
.RI "\fILocally-stored hidden state module\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBinput2GateModule\fP"
.br
.RI "\fILocally-stored input 2 gate module\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBinputGateModule\fP"
.br
.RI "\fILocally-stored input gate module\&. \fP"
.ti -1c
.RI "InputDataType \fBinputParameter\fP"
.br
.RI "\fILocally-stored input parameter object\&. \fP"
.ti -1c
.RI "size_t \fBinSize\fP"
.br
.RI "\fILocally-stored number of input units\&. \fP"
.ti -1c
.RI "std::vector< \fBLayerTypes\fP > \fBnetwork\fP"
.br
.RI "\fILocally-stored list of network modules\&. \fP"
.ti -1c
.RI "std::vector< arma::mat > \fBoutParameter\fP"
.br
.RI "\fILocally-stored output parameters\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBoutput2GateModule\fP"
.br
.RI "\fILocally-stored output 2 gate module\&. \fP"
.ti -1c
.RI "\fBLayerTypes\fP \fBoutputGateModule\fP"
.br
.RI "\fILocally-stored output gate module\&. \fP"
.ti -1c
.RI "OutputDataType \fBoutputParameter\fP"
.br
.RI "\fILocally-stored output parameter object\&. \fP"
.ti -1c
.RI "\fBOutputParameterVisitor\fP \fBoutputParameterVisitor\fP"
.br
.RI "\fILocally-stored output parameter visitor\&. \fP"
.ti -1c
.RI "size_t \fBoutSize\fP"
.br
.RI "\fILocally-stored number of output units\&. \fP"
.ti -1c
.RI "arma::mat \fBprevCell\fP"
.br
.RI "\fILocally-stored previous cell state\&. \fP"
.ti -1c
.RI "arma::mat \fBprevError\fP"
.br
.RI "\fILocally-stored previous error\&. \fP"
.ti -1c
.RI "arma::mat \fBprevOutput\fP"
.br
.RI "\fILocally-stored previous output\&. \fP"
.ti -1c
.RI "size_t \fBrho\fP"
.br
.RI "\fINumber of steps to backpropagate through time (BPTT)\&. \fP"
.ti -1c
.RI "OutputDataType \fBweights\fP"
.br
.RI "\fILocally-stored weight object\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::LSTM< InputDataType, OutputDataType >"
An implementation of a lstm network layer\&. 

This class allows specification of the type of the activation functions used for the gates and cells and also of the type of the function used to initialize and update the peephole weights\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 51 of file layer_types\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::\fBLSTM\fP ()"

.PP
Create the \fBLSTM\fP object\&. 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::\fBLSTM\fP (const size_t inSize, const size_t outSize, const size_t rho)"

.PP
Create the \fBLSTM\fP layer object using the specified parameters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinSize\fP The number of input units\&. 
.br
\fIoutSize\fP The number of output units\&. 
.br
\fIrho\fP Maximum number of steps to backpropagate through time (BPTT)\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Backward (const arma::Mat< eT > &&, arma::Mat< eT > && gy, arma::Mat< eT > && g)"

.PP
Ordinary feed backward pass of a neural network, calculating the function f(x) by propagating x backwards trough f\&. Using the results from the feed forward pass\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fIgy\fP The backpropagated error\&. 
.br
\fIg\fP The calculated gradient\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType const& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 123 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::delta\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 125 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::delta\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Deterministic () const\fC [inline]\fP"

.PP
The value of the deterministic parameter\&. 
.PP
Definition at line 98 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::deterministic\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Deterministic ()\fC [inline]\fP"

.PP
Modify the value of the deterministic parameter\&. 
.PP
Definition at line 100 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::deterministic\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Forward (arma::Mat< eT > && input, arma::Mat< eT > && output)"

.PP
Ordinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data used for evaluating the specified function\&. 
.br
\fIoutput\fP Resulting output activation\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Gradient (arma::Mat< eT > && input, arma::Mat< eT > &&, arma::Mat< eT > &&)"

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType const& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Gradient () const\fC [inline]\fP"

.PP
Get the gradient\&. 
.PP
Definition at line 128 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::gradient\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Gradient ()\fC [inline]\fP"

.PP
Modify the gradient\&. 
.PP
Definition at line 130 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::gradient\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType const& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::InputParameter () const\fC [inline]\fP"

.PP
Get the input parameter\&. 
.PP
Definition at line 113 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::inputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::InputParameter ()\fC [inline]\fP"

.PP
Modify the input parameter\&. 
.PP
Definition at line 115 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::inputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<\fBLayerTypes\fP>& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Model ()\fC [inline]\fP"

.PP
Get the model modules\&. 
.PP
Definition at line 133 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::network, and mlpack::ann::LSTM< InputDataType, OutputDataType >::Serialize()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType const& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 118 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::outputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 120 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::outputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType const& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Parameters () const\fC [inline]\fP"

.PP
Get the parameters\&. 
.PP
Definition at line 108 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::weights\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Parameters ()\fC [inline]\fP"

.PP
Modify the parameters\&. 
.PP
Definition at line 110 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::weights\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Rho () const\fC [inline]\fP"

.PP
Get the maximum number of steps to backpropagate through time (BPTT)\&. 
.PP
Definition at line 103 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::rho\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t& \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Rho ()\fC [inline]\fP"

.PP
Modify the maximum number of steps to backpropagate through time (BPTT)\&. 
.PP
Definition at line 105 of file lstm\&.hpp\&.
.PP
References mlpack::ann::LSTM< InputDataType, OutputDataType >::rho\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename Archive > void \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::Serialize (Archive & ar, const unsigned int)"

.PP
Serialize the layer\&. 
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Model()\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::backwardStep\fC [private]\fP"

.PP
Locally-stored number of backward steps\&. 
.PP
Definition at line 198 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::cellActivationError\fC [private]\fP"

.PP
Locally-stored cell activation error\&. 
.PP
Definition at line 213 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::cellActivationModule\fC [private]\fP"

.PP
Locally-stored cell activation module\&. 
.PP
Definition at line 183 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::cellModule\fC [private]\fP"

.PP
Locally-stored cell module\&. 
.PP
Definition at line 180 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<arma::mat> \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::cellParameter\fC [private]\fP"

.PP
Locally-stored cell parameters\&. 
.PP
Definition at line 204 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::delta\fC [private]\fP"

.PP
Locally-stored delta object\&. 
.PP
Definition at line 222 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Delta()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBDeltaVisitor\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::deltaVisitor\fC [private]\fP"

.PP
Locally-stored delta visitor\&. 
.PP
Definition at line 189 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::deterministic\fC [private]\fP"

.PP
If true dropout and scaling is disabled, see notes above\&. 
.PP
Definition at line 219 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Deterministic()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::forgetGateError\fC [private]\fP"

.PP
Locally-stored foget gate error\&. 
.PP
Definition at line 216 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::forgetGateModule\fC [private]\fP"

.PP
Locally-stored forget gate module\&. 
.PP
Definition at line 174 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::forwardStep\fC [private]\fP"

.PP
Locally-stored number of forward steps\&. 
.PP
Definition at line 195 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::gradient\fC [private]\fP"

.PP
Locally-stored gradient object\&. 
.PP
Definition at line 225 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Gradient()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::gradientStep\fC [private]\fP"

.PP
Locally-stored number of gradient steps\&. 
.PP
Definition at line 201 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::hiddenStateModule\fC [private]\fP"

.PP
Locally-stored hidden state module\&. 
.PP
Definition at line 171 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::input2GateModule\fC [private]\fP"

.PP
Locally-stored input 2 gate module\&. 
.PP
Definition at line 162 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::inputGateModule\fC [private]\fP"

.PP
Locally-stored input gate module\&. 
.PP
Definition at line 168 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::inputParameter\fC [private]\fP"

.PP
Locally-stored input parameter object\&. 
.PP
Definition at line 228 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::InputParameter()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::inSize\fC [private]\fP"

.PP
Locally-stored number of input units\&. 
.PP
Definition at line 144 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<\fBLayerTypes\fP> \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::network\fC [private]\fP"

.PP
Locally-stored list of network modules\&. 
.PP
Definition at line 192 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Model()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<arma::mat> \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::outParameter\fC [private]\fP"

.PP
Locally-stored output parameters\&. 
.PP
Definition at line 207 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::output2GateModule\fC [private]\fP"

.PP
Locally-stored output 2 gate module\&. 
.PP
Definition at line 165 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBLayerTypes\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::outputGateModule\fC [private]\fP"

.PP
Locally-stored output gate module\&. 
.PP
Definition at line 177 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::outputParameter\fC [private]\fP"

.PP
Locally-stored output parameter object\&. 
.PP
Definition at line 231 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::OutputParameter()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBOutputParameterVisitor\fP \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::outputParameterVisitor\fC [private]\fP"

.PP
Locally-stored output parameter visitor\&. 
.PP
Definition at line 186 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::outSize\fC [private]\fP"

.PP
Locally-stored number of output units\&. 
.PP
Definition at line 147 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::prevCell\fC [private]\fP"

.PP
Locally-stored previous cell state\&. 
.PP
Definition at line 159 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::prevError\fC [private]\fP"

.PP
Locally-stored previous error\&. 
.PP
Definition at line 210 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::prevOutput\fC [private]\fP"

.PP
Locally-stored previous output\&. 
.PP
Definition at line 156 of file lstm\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::rho\fC [private]\fP"

.PP
Number of steps to backpropagate through time (BPTT)\&. 
.PP
Definition at line 150 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Rho()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::LSTM\fP< InputDataType, OutputDataType >::weights\fC [private]\fP"

.PP
Locally-stored weight object\&. 
.PP
Definition at line 153 of file lstm\&.hpp\&.
.PP
Referenced by mlpack::ann::LSTM< InputDataType, OutputDataType >::Parameters()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
