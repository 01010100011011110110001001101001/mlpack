.TH "mlpack::ann::SetInputHeightVisitor" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::SetInputHeightVisitor \- \fBSetInputHeightVisitor\fP updates the input height parameter with the given input height\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits static_visitor< bool >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSetInputHeightVisitor\fP (const size_t \fBinputHeight\fP=0, const bool \fBreset\fP=false)"
.br
.RI "\fIUpdate the input height parameter with the given input height\&. \fP"
.ti -1c
.RI "template<typename LayerType > bool \fBoperator()\fP (LayerType *layer) const "
.br
.RI "\fIUpdate the input height parameter\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<typename T > std::enable_if< !HasInputHeight< T, size_t &(T::*)()>::value &&!HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, bool >::type \fBLayerInputHeight\fP (T *layer) const "
.br
.RI "\fIDo nothing if the module doesn't implement the InputHeight() or Model() function\&. \fP"
.ti -1c
.RI "template<typename T > std::enable_if< HasInputHeight< T, size_t &(T::*)()>::value &&!HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, bool >::type \fBLayerInputHeight\fP (T *layer) const "
.br
.RI "\fIUpdate the input height if the module implements the InputHeight() function\&. \fP"
.ti -1c
.RI "template<typename T > std::enable_if< !HasInputHeight< T, size_t &(T::*)()>::value &&HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, bool >::type \fBLayerInputHeight\fP (T *layer) const "
.br
.RI "\fIUpdate the input height if the module implements the Model() function\&. \fP"
.ti -1c
.RI "template<typename T > std::enable_if< HasInputHeight< T, size_t &(T::*)()>::value &&HasModelCheck< T, std::vector< \fBLayerTypes\fP > &(T::*)()>::value, bool >::type \fBLayerInputHeight\fP (T *layer) const "
.br
.RI "\fIUpdate the input height if the module implements the InputHeight() or Model() function\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBinputHeight\fP"
.br
.RI "\fIThe input height parameter\&. \fP"
.ti -1c
.RI "bool \fBreset\fP"
.br
.RI "\fIIf set reset the height parameter if already set\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBSetInputHeightVisitor\fP updates the input height parameter with the given input height\&. 
.PP
Definition at line 28 of file set_input_height_visitor\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::ann::SetInputHeightVisitor::SetInputHeightVisitor (const size_t inputHeight = \fC0\fP, const bool reset = \fCfalse\fP)"

.PP
Update the input height parameter with the given input height\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > std::enable_if< !HasInputHeight<T, size_t&(T::*)()>::value && !HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, bool>::type mlpack::ann::SetInputHeightVisitor::LayerInputHeight (T * layer) const\fC [private]\fP"

.PP
Do nothing if the module doesn't implement the InputHeight() or Model() function\&. 
.SS "template<typename T > std::enable_if< HasInputHeight<T, size_t&(T::*)()>::value && !HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, bool>::type mlpack::ann::SetInputHeightVisitor::LayerInputHeight (T * layer) const\fC [private]\fP"

.PP
Update the input height if the module implements the InputHeight() function\&. 
.SS "template<typename T > std::enable_if< !HasInputHeight<T, size_t&(T::*)()>::value && HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, bool>::type mlpack::ann::SetInputHeightVisitor::LayerInputHeight (T * layer) const\fC [private]\fP"

.PP
Update the input height if the module implements the Model() function\&. 
.SS "template<typename T > std::enable_if< HasInputHeight<T, size_t&(T::*)()>::value && HasModelCheck<T, std::vector<\fBLayerTypes\fP>&(T::*)()>::value, bool>::type mlpack::ann::SetInputHeightVisitor::LayerInputHeight (T * layer) const\fC [private]\fP"

.PP
Update the input height if the module implements the InputHeight() or Model() function\&. 
.SS "template<typename LayerType > bool mlpack::ann::SetInputHeightVisitor::operator() (LayerType * layer) const"

.PP
Update the input height parameter\&. 
.SH "Member Data Documentation"
.PP 
.SS "size_t mlpack::ann::SetInputHeightVisitor::inputHeight\fC [private]\fP"

.PP
The input height parameter\&. 
.PP
Definition at line 40 of file set_input_height_visitor\&.hpp\&.
.SS "bool mlpack::ann::SetInputHeightVisitor::reset\fC [private]\fP"

.PP
If set reset the height parameter if already set\&. 
.PP
Definition at line 43 of file set_input_height_visitor\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
