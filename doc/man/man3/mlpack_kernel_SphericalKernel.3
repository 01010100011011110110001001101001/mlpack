.TH "mlpack::kernel::SphericalKernel" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::kernel::SphericalKernel \- The spherical kernel, which is 1 when the distance between the two argument points is less than or equal to the bandwidth, or 0 otherwise\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSphericalKernel\fP (const double \fBbandwidth\fP=1\&.0)"
.br
.RI "\fIConstruct the \fBSphericalKernel\fP with the given bandwidth\&. \fP"
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBConvolutionIntegral\fP (const VecTypeA &a, const VecTypeB &b) const "
.br
.RI "\fIObtains the convolution integral [integral K(||x-a||)K(||b-x||)dx] for the two vectors\&. \fP"
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBEvaluate\fP (const VecTypeA &a, const VecTypeB &b) const "
.br
.RI "\fIEvaluate the spherical kernel with the given two vectors\&. \fP"
.ti -1c
.RI "double \fBEvaluate\fP (const double t) const "
.br
.RI "\fIEvaluate the kernel when only a distance is given, not two points\&. \fP"
.ti -1c
.RI "double \fBGradient\fP (double t)"
.br
.ti -1c
.RI "double \fBNormalizer\fP (size_t dimension) const "
.br
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &ar, const unsigned int)"
.br
.RI "\fISerialize the object\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBbandwidth\fP"
.br
.ti -1c
.RI "double \fBbandwidthSquared\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The spherical kernel, which is 1 when the distance between the two argument points is less than or equal to the bandwidth, or 0 otherwise\&. 
.PP
Definition at line 23 of file spherical_kernel\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::kernel::SphericalKernel::SphericalKernel (const double bandwidth = \fC1\&.0\fP)\fC [inline]\fP"

.PP
Construct the \fBSphericalKernel\fP with the given bandwidth\&. 
.PP
Definition at line 29 of file spherical_kernel\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename VecTypeA , typename VecTypeB > double mlpack::kernel::SphericalKernel::ConvolutionIntegral (const VecTypeA & a, const VecTypeB & b) const\fC [inline]\fP"

.PP
Obtains the convolution integral [integral K(||x-a||)K(||b-x||)dx] for the two vectors\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector (arma::vec, arma::sp_vec should be expected)\&. 
.br
\fIVecTypeB\fP Type of second vector\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
the convolution integral value\&. 
.RE
.PP

.PP
Definition at line 62 of file spherical_kernel\&.hpp\&.
.PP
References bandwidth, mlpack::metric::LMetric< TPower, TTakeRoot >::Evaluate(), mlpack::Log::Fatal, and Normalizer()\&.
.SS "template<typename VecTypeA , typename VecTypeB > double mlpack::kernel::SphericalKernel::Evaluate (const VecTypeA & a, const VecTypeB & b) const\fC [inline]\fP"

.PP
Evaluate the spherical kernel with the given two vectors\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector\&. 
.br
\fIVecTypeB\fP Type of second vector\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The kernel evaluation between the two vectors\&. 
.RE
.PP

.PP
Definition at line 44 of file spherical_kernel\&.hpp\&.
.PP
References bandwidthSquared, and mlpack::metric::LMetric< TPower, TTakeRoot >::Evaluate()\&.
.SS "double mlpack::kernel::SphericalKernel::Evaluate (const double t) const\fC [inline]\fP"

.PP
Evaluate the kernel when only a distance is given, not two points\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt\fP Argument to kernel\&. 
.RE
.PP

.PP
Definition at line 99 of file spherical_kernel\&.hpp\&.
.PP
References bandwidth\&.
.SS "double mlpack::kernel::SphericalKernel::Gradient (double t)\fC [inline]\fP"

.PP
Definition at line 103 of file spherical_kernel\&.hpp\&.
.PP
References bandwidth\&.
.SS "double mlpack::kernel::SphericalKernel::Normalizer (size_t dimension) const\fC [inline]\fP"

.PP
Definition at line 88 of file spherical_kernel\&.hpp\&.
.PP
References bandwidth, and M_PI\&.
.PP
Referenced by ConvolutionIntegral()\&.
.SS "template<typename Archive > void mlpack::kernel::SphericalKernel::Serialize (Archive & ar, const unsigned int)\fC [inline]\fP"

.PP
Serialize the object\&. 
.PP
Definition at line 109 of file spherical_kernel\&.hpp\&.
.PP
References bandwidth, bandwidthSquared, and mlpack::data::CreateNVP()\&.
.SH "Member Data Documentation"
.PP 
.SS "double mlpack::kernel::SphericalKernel::bandwidth\fC [private]\fP"

.PP
Definition at line 116 of file spherical_kernel\&.hpp\&.
.PP
Referenced by ConvolutionIntegral(), Evaluate(), Gradient(), Normalizer(), and Serialize()\&.
.SS "double mlpack::kernel::SphericalKernel::bandwidthSquared\fC [private]\fP"

.PP
Definition at line 117 of file spherical_kernel\&.hpp\&.
.PP
Referenced by Evaluate(), and Serialize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
