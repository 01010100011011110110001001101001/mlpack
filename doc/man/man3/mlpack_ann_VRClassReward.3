.TH "mlpack::ann::VRClassReward< InputDataType, OutputDataType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::VRClassReward< InputDataType, OutputDataType > \- Implementation of the variance reduced classification reinforcement layer\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVRClassReward\fP (const double \fBscale\fP=1, const bool \fBsizeAverage\fP=true)"
.br
.RI "\fICreate the \fBVRClassReward\fP object\&. \fP"
.ti -1c
.RI "template<class LayerType , class\&.\&.\&. Args> void \fBAdd\fP (Args\&.\&.\&.args)"
.br
.ti -1c
.RI "void \fBAdd\fP (\fBLayerTypes\fP layer)"
.br
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &&input, const arma::Mat< eT > &&target, arma::Mat< eT > &&output)"
.br
.RI "\fIOrdinary feed backward pass of a neural network\&. \fP"
.ti -1c
.RI "OutputDataType & \fBDelta\fP () const "
.br
.RI "\fIGet the delta\&. \fP"
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "\fIModify the delta\&. \fP"
.ti -1c
.RI "bool \fBDeterministic\fP () const "
.br
.RI "\fIGet the value of the deterministic parameter\&. \fP"
.ti -1c
.RI "bool & \fBDeterministic\fP ()"
.br
.RI "\fIModify the value of the deterministic parameter\&. \fP"
.ti -1c
.RI "template<typename eT > double \fBForward\fP (const arma::Mat< eT > &&input, const arma::Mat< eT > &&target)"
.br
.RI "\fIOrdinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. \fP"
.ti -1c
.RI "InputDataType & \fBInputParameter\fP () const "
.br
.RI "\fIGet the input parameter\&. \fP"
.ti -1c
.RI "InputDataType & \fBInputParameter\fP ()"
.br
.RI "\fIModify the input parameter\&. \fP"
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const "
.br
.RI "\fIGet the output parameter\&. \fP"
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "\fIModify the output parameter\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &, const unsigned int)"
.br
.RI "\fISerialize the layer\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "OutputDataType \fBdelta\fP"
.br
.RI "\fILocally-stored delta object\&. \fP"
.ti -1c
.RI "bool \fBdeterministic\fP"
.br
.RI "\fIIf true dropout and scaling is disabled, see notes above\&. \fP"
.ti -1c
.RI "InputDataType \fBinputParameter\fP"
.br
.RI "\fILocally-stored input parameter object\&. \fP"
.ti -1c
.RI "std::vector< \fBLayerTypes\fP > \fBnetwork\fP"
.br
.RI "\fILocally-stored network modules\&. \fP"
.ti -1c
.RI "OutputDataType \fBoutputParameter\fP"
.br
.RI "\fILocally-stored output parameter object\&. \fP"
.ti -1c
.RI "double \fBreward\fP"
.br
.RI "\fILocally stored reward parameter\&. \fP"
.ti -1c
.RI "const double \fBscale\fP"
.br
.RI "\fILocally-stored value to scale the reward\&. \fP"
.ti -1c
.RI "const bool \fBsizeAverage\fP"
.br
.RI "\fIIf true take the average over all batches\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::VRClassReward< InputDataType, OutputDataType >"
Implementation of the variance reduced classification reinforcement layer\&. 

This layer is meant to be used in combination with the reinforce normal layer (ReinforceNormalLayer), which expects that an reward: (1 for success, 0 otherwise)\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 54 of file layer_types\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::\fBVRClassReward\fP (const double scale = \fC1\fP, const bool sizeAverage = \fCtrue\fP)"

.PP
Create the \fBVRClassReward\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIscale\fP Parameter used to scale the reward\&. 
.br
\fIsizeAverage\fP Take the average over all batches\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<class LayerType , class\&.\&.\&. Args> void \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::\fBAdd\fP (Args\&.\&.\&. args)\fC [inline]\fP"

.PP
Definition at line 97 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::network\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> void \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::\fBAdd\fP (\fBLayerTypes\fP layer)\fC [inline]\fP"

.PP
Definition at line 104 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::network, and mlpack::ann::VRClassReward< InputDataType, OutputDataType >::Serialize()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Backward (const arma::Mat< eT > && input, const arma::Mat< eT > && target, arma::Mat< eT > && output)"

.PP
Ordinary feed backward pass of a neural network\&. The negative log likelihood layer expectes that the input contains log-probabilities for each class\&. The layer also expects a class index, in the range between 1 and the number of classes, as target when calling the Forward function\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fItarget\fP The target vector, that contains the class index in the range between 1 and the number of classes\&. 
.br
\fIoutput\fP The calculated error\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 82 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::delta\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 84 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::delta\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Deterministic () const\fC [inline]\fP"

.PP
Get the value of the deterministic parameter\&. 
.PP
Definition at line 87 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::deterministic\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Deterministic ()\fC [inline]\fP"

.PP
Modify the value of the deterministic parameter\&. 
.PP
Definition at line 89 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::deterministic\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > double \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Forward (const arma::Mat< eT > && input, const arma::Mat< eT > && target)"

.PP
Ordinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data that contains the log-probabilities for each class\&. 
.br
\fItarget\fP The target vector, that contains the class index in the range between 1 and the number of classes\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::InputParameter () const\fC [inline]\fP"

.PP
Get the input parameter\&. 
.PP
Definition at line 72 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::inputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::InputParameter ()\fC [inline]\fP"

.PP
Modify the input parameter\&. 
.PP
Definition at line 74 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::inputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 77 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::outputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 79 of file vr_class_reward\&.hpp\&.
.PP
References mlpack::ann::VRClassReward< InputDataType, OutputDataType >::outputParameter\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename Archive > void \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::Serialize (Archive &, const unsigned int)"

.PP
Serialize the layer\&. 
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::Add()\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::delta\fC [private]\fP"

.PP
Locally-stored delta object\&. 
.PP
Definition at line 123 of file vr_class_reward\&.hpp\&.
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::Delta()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::deterministic\fC [private]\fP"

.PP
If true dropout and scaling is disabled, see notes above\&. 
.PP
Definition at line 132 of file vr_class_reward\&.hpp\&.
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::Deterministic()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::inputParameter\fC [private]\fP"

.PP
Locally-stored input parameter object\&. 
.PP
Definition at line 126 of file vr_class_reward\&.hpp\&.
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::InputParameter()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<\fBLayerTypes\fP> \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::network\fC [private]\fP"

.PP
Locally-stored network modules\&. 
.PP
Definition at line 135 of file vr_class_reward\&.hpp\&.
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::Add()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::outputParameter\fC [private]\fP"

.PP
Locally-stored output parameter object\&. 
.PP
Definition at line 129 of file vr_class_reward\&.hpp\&.
.PP
Referenced by mlpack::ann::VRClassReward< InputDataType, OutputDataType >::OutputParameter()\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> double \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::reward\fC [private]\fP"

.PP
Locally stored reward parameter\&. 
.PP
Definition at line 120 of file vr_class_reward\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> const double \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::scale\fC [private]\fP"

.PP
Locally-stored value to scale the reward\&. 
.PP
Definition at line 114 of file vr_class_reward\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> const bool \fBmlpack::ann::VRClassReward\fP< InputDataType, OutputDataType >::sizeAverage\fC [private]\fP"

.PP
If true take the average over all batches\&. 
.PP
Definition at line 117 of file vr_class_reward\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
