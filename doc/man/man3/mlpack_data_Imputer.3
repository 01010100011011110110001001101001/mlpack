.TH "mlpack::data::Imputer< T, MapperType, StrategyType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::data::Imputer< T, MapperType, StrategyType > \- Given a dataset of a particular datatype, replace user-specified missing value with a variable dependent on the StrategyType and MapperType\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBImputer\fP (MapperType \fBmapper\fP, bool \fBcolumnMajor\fP=true)"
.br
.ti -1c
.RI "\fBImputer\fP (MapperType \fBmapper\fP, StrategyType \fBstrategy\fP, bool \fBcolumnMajor\fP=true)"
.br
.ti -1c
.RI "void \fBImpute\fP (arma::Mat< T > &input, const \fBstd::string\fP &missingValue, const size_t dimension)"
.br
.RI "\fIGiven an input dataset, replace missing values of a dimension with given imputation strategy\&. \fP"
.ti -1c
.RI "const MapperType & \fBMapper\fP () const "
.br
.RI "\fIGet the mapper\&. \fP"
.ti -1c
.RI "MapperType & \fBMapper\fP ()"
.br
.RI "\fIModify the given mapper (be careful!) \fP"
.ti -1c
.RI "const StrategyType & \fBStrategy\fP () const "
.br
.RI "\fIGet the strategy\&. \fP"
.ti -1c
.RI "StrategyType & \fBStrategy\fP ()"
.br
.RI "\fIModify the given given strategy (be careful!) \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fBcolumnMajor\fP"
.br
.ti -1c
.RI "MapperType \fBmapper\fP"
.br
.ti -1c
.RI "StrategyType \fBstrategy\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T, typename MapperType, typename StrategyType>
.br
class mlpack::data::Imputer< T, MapperType, StrategyType >"
Given a dataset of a particular datatype, replace user-specified missing value with a variable dependent on the StrategyType and MapperType\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fIT\fP Type of armadillo matrix used for imputation strategy\&. 
.br
\fIMapperType\fP \fBDatasetMapper\fP that is used to hold dataset information\&. 
.br
\fIStrategyType\fP Imputation strategy used\&. 
.RE
.PP

.PP
Definition at line 33 of file imputer\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T , typename MapperType , typename StrategyType > \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::\fBImputer\fP (MapperType mapper, bool columnMajor = \fCtrue\fP)\fC [inline]\fP"

.PP
Definition at line 36 of file imputer\&.hpp\&.
.SS "template<typename T , typename MapperType , typename StrategyType > \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::\fBImputer\fP (MapperType mapper, StrategyType strategy, bool columnMajor = \fCtrue\fP)\fC [inline]\fP"

.PP
Definition at line 43 of file imputer\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T , typename MapperType , typename StrategyType > void \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::Impute (arma::Mat< T > & input, const \fBstd::string\fP & missingValue, const size_t dimension)\fC [inline]\fP"

.PP
Given an input dataset, replace missing values of a dimension with given imputation strategy\&. This function does not produce output matrix, but overwrites the result into the input matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input dataset to apply imputation\&.  missingValue User defined missing value; it can be anything\&. 
.br
\fIdimension\fP Dimension to apply the imputation\&. 
.RE
.PP

.PP
Definition at line 60 of file imputer\&.hpp\&.
.PP
References mlpack::data::Imputer< T, MapperType, StrategyType >::columnMajor, mlpack::data::Imputer< T, MapperType, StrategyType >::mapper, and mlpack::data::Imputer< T, MapperType, StrategyType >::strategy\&.
.SS "template<typename T , typename MapperType , typename StrategyType > const MapperType& \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::Mapper () const\fC [inline]\fP"

.PP
Get the mapper\&. 
.PP
Definition at line 75 of file imputer\&.hpp\&.
.PP
References mlpack::data::Imputer< T, MapperType, StrategyType >::mapper\&.
.SS "template<typename T , typename MapperType , typename StrategyType > MapperType& \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::Mapper ()\fC [inline]\fP"

.PP
Modify the given mapper (be careful!) 
.PP
Definition at line 78 of file imputer\&.hpp\&.
.PP
References mlpack::data::Imputer< T, MapperType, StrategyType >::mapper\&.
.SS "template<typename T , typename MapperType , typename StrategyType > const StrategyType& \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::Strategy () const\fC [inline]\fP"

.PP
Get the strategy\&. 
.PP
Definition at line 69 of file imputer\&.hpp\&.
.PP
References mlpack::data::Imputer< T, MapperType, StrategyType >::strategy\&.
.SS "template<typename T , typename MapperType , typename StrategyType > StrategyType& \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::Strategy ()\fC [inline]\fP"

.PP
Modify the given given strategy (be careful!) 
.PP
Definition at line 72 of file imputer\&.hpp\&.
.PP
References mlpack::data::Imputer< T, MapperType, StrategyType >::strategy\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename T , typename MapperType , typename StrategyType > bool \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::columnMajor\fC [private]\fP"

.PP
Definition at line 88 of file imputer\&.hpp\&.
.PP
Referenced by mlpack::data::Imputer< T, MapperType, StrategyType >::Impute()\&.
.SS "template<typename T , typename MapperType , typename StrategyType > MapperType \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::mapper\fC [private]\fP"

.PP
Definition at line 85 of file imputer\&.hpp\&.
.PP
Referenced by mlpack::data::Imputer< T, MapperType, StrategyType >::Impute(), and mlpack::data::Imputer< T, MapperType, StrategyType >::Mapper()\&.
.SS "template<typename T , typename MapperType , typename StrategyType > StrategyType \fBmlpack::data::Imputer\fP< T, MapperType, StrategyType >::strategy\fC [private]\fP"

.PP
Definition at line 82 of file imputer\&.hpp\&.
.PP
Referenced by mlpack::data::Imputer< T, MapperType, StrategyType >::Impute(), and mlpack::data::Imputer< T, MapperType, StrategyType >::Strategy()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
