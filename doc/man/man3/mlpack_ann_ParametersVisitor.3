.TH "mlpack::ann::ParametersVisitor" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::ParametersVisitor \- \fBParametersVisitor\fP exposes the parameters set of the given module and stores the parameters set into the given matrix\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits static_visitor< void >\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParametersVisitor\fP (arma::mat &&\fBparameters\fP)"
.br
.RI "\fIStore the parameters set into the given parameters matrix\&. \fP"
.ti -1c
.RI "template<typename LayerType > void \fBoperator()\fP (LayerType *layer) const "
.br
.RI "\fISet the parameters set\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename P > std::enable_if< !HasParametersCheck< T, P &(T::*)()>::value, void >::type \fBLayerParameters\fP (T *layer, P &output) const "
.br
.RI "\fIDo not set the parameters set if the module doesn't implement the Parameters() function\&. \fP"
.ti -1c
.RI "template<typename T , typename P > std::enable_if< HasParametersCheck< T, P &(T::*)()>::value, void >::type \fBLayerParameters\fP (T *layer, P &output) const "
.br
.RI "\fISet the parameters set if the module implements the Parameters() function\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "arma::mat && \fBparameters\fP"
.br
.RI "\fIThe parameters set\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBParametersVisitor\fP exposes the parameters set of the given module and stores the parameters set into the given matrix\&. 
.PP
Definition at line 28 of file parameters_visitor\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::ann::ParametersVisitor::ParametersVisitor (arma::mat && parameters)"

.PP
Store the parameters set into the given parameters matrix\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename T , typename P > std::enable_if< !HasParametersCheck<T, P&(T::*)()>::value, void>::type mlpack::ann::ParametersVisitor::LayerParameters (T * layer, P & output) const\fC [private]\fP"

.PP
Do not set the parameters set if the module doesn't implement the Parameters() function\&. 
.SS "template<typename T , typename P > std::enable_if< HasParametersCheck<T, P&(T::*)()>::value, void>::type mlpack::ann::ParametersVisitor::LayerParameters (T * layer, P & output) const\fC [private]\fP"

.PP
Set the parameters set if the module implements the Parameters() function\&. 
.SS "template<typename LayerType > void mlpack::ann::ParametersVisitor::operator() (LayerType * layer) const"

.PP
Set the parameters set\&. 
.SH "Member Data Documentation"
.PP 
.SS "arma::mat&& mlpack::ann::ParametersVisitor::parameters\fC [private]\fP"

.PP
The parameters set\&. 
.PP
Definition at line 40 of file parameters_visitor\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
