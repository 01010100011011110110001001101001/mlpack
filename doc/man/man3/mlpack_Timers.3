.TH "mlpack::Timers" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::Timers \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimers\fP ()"
.br
.RI "\fINothing to do for the constructor\&. \fP"
.ti -1c
.RI "std::map< \fBstd::string\fP, std::chrono::microseconds > & \fBGetAllTimers\fP ()"
.br
.RI "\fIReturns a copy of all the timers used via this interface\&. \fP"
.ti -1c
.RI "bool \fBGetState\fP (\fBstd::string\fP timerName)"
.br
.RI "\fIReturns state of the given timer\&. \fP"
.ti -1c
.RI "std::chrono::microseconds \fBGetTimer\fP (const \fBstd::string\fP &timerName)"
.br
.RI "\fIReturns a copy of the timer specified\&. \fP"
.ti -1c
.RI "void \fBPrintTimer\fP (const \fBstd::string\fP &timerName)"
.br
.RI "\fIPrints the specified timer\&. \fP"
.ti -1c
.RI "void \fBStartTimer\fP (const \fBstd::string\fP &timerName)"
.br
.RI "\fI * Initializes a timer, available like a normal value specified on  * the command line\&. \fP"
.ti -1c
.RI "void \fBStopTimer\fP (const \fBstd::string\fP &timerName)"
.br
.RI "\fI * Halts the timer, and replaces it's value with  * the delta time from it's start   *   *\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "std::chrono::high_resolution_clock::time_point \fBGetTime\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::map< \fBstd::string\fP, std::chrono::microseconds > \fBtimers\fP"
.br
.RI "\fIA map of all the timers that are being tracked\&. \fP"
.ti -1c
.RI "std::map< \fBstd::string\fP, std::chrono::high_resolution_clock::time_point > \fBtimerStartTime\fP"
.br
.RI "\fIA map for the starting values of the timers\&. \fP"
.ti -1c
.RI "std::map< \fBstd::string\fP, bool > \fBtimerState\fP"
.br
.RI "\fIA map that contains whether or not each timer is currently running\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 72 of file timers\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::Timers::Timers ()\fC [inline]\fP"

.PP
Nothing to do for the constructor\&. 
.PP
Definition at line 76 of file timers\&.hpp\&.
.PP
References string()\&.
.SH "Member Function Documentation"
.PP 
.SS "std::map<\fBstd::string\fP, std::chrono::microseconds>& mlpack::Timers::GetAllTimers ()"

.PP
Returns a copy of all the timers used via this interface\&. 
.SS "bool mlpack::Timers::GetState (\fBstd::string\fP timerName)"

.PP
Returns state of the given timer\&. 
.PP
\fBParameters:\fP
.RS 4
\fItimerName\fP The name of the timer in question\&. 
.RE
.PP

.SS "std::chrono::high_resolution_clock::time_point mlpack::Timers::GetTime ()\fC [private]\fP"

.SS "std::chrono::microseconds mlpack::Timers::GetTimer (const \fBstd::string\fP & timerName)"

.PP
Returns a copy of the timer specified\&. 
.PP
\fBParameters:\fP
.RS 4
\fItimerName\fP The name of the timer in question\&. 
.RE
.PP

.SS "void mlpack::Timers::PrintTimer (const \fBstd::string\fP & timerName)"

.PP
Prints the specified timer\&. If it took longer than a minute to complete the timer will be displayed in days, hours, and minutes as well\&.
.PP
\fBParameters:\fP
.RS 4
\fItimerName\fP The name of the timer in question\&. 
.RE
.PP

.SS "void mlpack::Timers::StartTimer (const \fBstd::string\fP & timerName)"

.PP
 * Initializes a timer, available like a normal value specified on  * the command line\&.   \fBTimers\fP are of type timeval\&. If a timer is started, then stopped, then re-started, then stopped, the final timer value will be the length of both runs of the timer\&.  *  * 
.PP
\fBParameters:\fP
.RS 4
\fItimerName\fP The name of the timer in question\&.   
.RE
.PP

.SS "void mlpack::Timers::StopTimer (const \fBstd::string\fP & timerName)"

.PP
 * Halts the timer, and replaces it's value with  * the delta time from it's start   *   *\&. 
.PP
\fBParameters:\fP
.RS 4
\fItimerName\fP The name of the timer in question\&.   
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "std::map<\fBstd::string\fP, std::chrono::microseconds> mlpack::Timers::timers\fC [private]\fP"

.PP
A map of all the timers that are being tracked\&. 
.PP
Definition at line 125 of file timers\&.hpp\&.
.SS "std::map<\fBstd::string\fP, std::chrono::high_resolution_clock::time_point> mlpack::Timers::timerStartTime\fC [private]\fP"

.PP
A map for the starting values of the timers\&. 
.PP
Definition at line 130 of file timers\&.hpp\&.
.SS "std::map<\fBstd::string\fP, bool> mlpack::Timers::timerState\fC [private]\fP"

.PP
A map that contains whether or not each timer is currently running\&. 
.PP
Definition at line 127 of file timers\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
