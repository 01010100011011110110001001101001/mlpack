.TH "src/mlpack/methods/neighbor_search/ns_model.hpp" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/mlpack/methods/neighbor_search/ns_model.hpp \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBmlpack::neighbor::BiSearchVisitor< SortPolicy >\fP"
.br
.RI "\fI\fBBiSearchVisitor\fP executes a bichromatic neighbor search on the given NSType\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::DeleteVisitor\fP"
.br
.RI "\fI\fBDeleteVisitor\fP deletes the given NSType instance\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::EpsilonVisitor\fP"
.br
.RI "\fI\fBEpsilonVisitor\fP exposes the Epsilon method of the given NSType\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::MonoSearchVisitor\fP"
.br
.RI "\fI\fBMonoSearchVisitor\fP executes a monochromatic neighbor search on the given NSType\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::NSModel< SortPolicy >\fP"
.br
.RI "\fIThe \fBNSModel\fP class provides an easy way to serialize a model, abstracts away the different types of trees, and also reflects the \fBNeighborSearch\fP API\&. \fP"
.ti -1c
.RI "struct \fBmlpack::neighbor::NSModelName< SortPolicy >\fP"
.br
.ti -1c
.RI "struct \fBmlpack::neighbor::NSModelName< FurthestNeighborSort >\fP"
.br
.ti -1c
.RI "struct \fBmlpack::neighbor::NSModelName< NearestNeighborSort >\fP"
.br
.ti -1c
.RI "class \fBmlpack::neighbor::ReferenceSetVisitor\fP"
.br
.RI "\fI\fBReferenceSetVisitor\fP exposes the referenceSet of the given NSType\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::SearchModeVisitor\fP"
.br
.RI "\fI\fBSearchModeVisitor\fP exposes the SearchMode() method of the given NSType\&. \fP"
.ti -1c
.RI "class \fBmlpack::neighbor::TrainVisitor< SortPolicy >\fP"
.br
.RI "\fI\fBTrainVisitor\fP sets the reference set to a new reference set on the given NSType\&. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmlpack\fP"
.br
.RI "\fILinear algebra utility functions, generally performed on matrices or vectors\&. \fP"
.ti -1c
.RI " \fBmlpack::neighbor\fP"
.br
.RI "\fINeighbor-search routines\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename SortPolicy , template< typename TreeMetricType, typename TreeStatType, typename TreeMatType > class TreeType> using \fBmlpack::neighbor::NSType\fP = NeighborSearch< SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, TreeType< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DualTreeTraverser >"
.br
.RI "\fIAlias template for euclidean neighbor search\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBBOOST_TEMPLATE_CLASS_VERSION\fP (template< typename SortPolicy >, \fBmlpack::neighbor::NSModel\fP< SortPolicy >, 1)"
.br
.RI "\fISet the serialization version of the NSModel class\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Ryan Curtin
.RE
.PP
This is a model for nearest or furthest neighbor search\&. It is useful in that it provides an easy way to serialize a model, abstracts away the different types of trees, and also reflects the NeighborSearch API and automatically directs to the right tree type\&.
.PP
mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license\&. You should have received a copy of the 3-clause BSD license along with mlpack\&. If not, see http://www.opensource.org/licenses/BSD-3-Clause for more information\&. 
.PP
Definition in file \fBns_model\&.hpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "BOOST_TEMPLATE_CLASS_VERSION (template< typename SortPolicy >, \fBmlpack::neighbor::NSModel\fP< SortPolicy >, 1)"

.PP
Set the serialization version of the NSModel class\&. 
.PP
Referenced by mlpack::neighbor::NSModel< SortPolicy >::RandomBasis()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
