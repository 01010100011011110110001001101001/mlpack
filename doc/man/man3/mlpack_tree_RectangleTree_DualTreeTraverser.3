.TH "mlpack::tree::RectangleTree< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >::DualTreeTraverser< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::tree::RectangleTree< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >::DualTreeTraverser< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType > \- A dual tree traverser for rectangle type trees\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBNodeAndScore\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDualTreeTraverser\fP (RuleType &\fBrule\fP)"
.br
.RI "\fIInstantiate the dual-tree traverser with the given rule set\&. \fP"
.ti -1c
.RI "size_t \fBNumBaseCases\fP () const "
.br
.RI "\fIGet the number of times a base case was calculated\&. \fP"
.ti -1c
.RI "size_t & \fBNumBaseCases\fP ()"
.br
.RI "\fIModify the number of times a base case was calculated\&. \fP"
.ti -1c
.RI "size_t \fBNumPrunes\fP () const "
.br
.RI "\fIGet the number of prunes\&. \fP"
.ti -1c
.RI "size_t & \fBNumPrunes\fP ()"
.br
.RI "\fIModify the number of prunes\&. \fP"
.ti -1c
.RI "size_t \fBNumScores\fP () const "
.br
.RI "\fIGet the number of times a node combination was scored\&. \fP"
.ti -1c
.RI "size_t & \fBNumScores\fP ()"
.br
.RI "\fIModify the number of times a node combination was scored\&. \fP"
.ti -1c
.RI "size_t \fBNumVisited\fP () const "
.br
.RI "\fIGet the number of visited combinations\&. \fP"
.ti -1c
.RI "size_t & \fBNumVisited\fP ()"
.br
.RI "\fIModify the number of visited combinations\&. \fP"
.ti -1c
.RI "void \fBTraverse\fP (\fBRectangleTree\fP &queryNode, \fBRectangleTree\fP &referenceNode)"
.br
.RI "\fITraverse the two trees\&. \fP"
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBnodeComparator\fP (const \fBNodeAndScore\fP &obj1, const \fBNodeAndScore\fP &obj2)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBnumBaseCases\fP"
.br
.RI "\fIThe number of times a base case was calculated\&. \fP"
.ti -1c
.RI "size_t \fBnumPrunes\fP"
.br
.RI "\fIThe number of prunes\&. \fP"
.ti -1c
.RI "size_t \fBnumScores\fP"
.br
.RI "\fIThe number of times a node combination was scored\&. \fP"
.ti -1c
.RI "size_t \fBnumVisited\fP"
.br
.RI "\fIThe number of node combinations that have been visited during traversal\&. \fP"
.ti -1c
.RI "RuleType & \fBrule\fP"
.br
.RI "\fIReference to the rules with which the trees will be traversed\&. \fP"
.ti -1c
.RI "RuleType::TraversalInfoType \fBtraversalInfo\fP"
.br
.RI "\fITraversal information, held in the class so that it isn't continually being reallocated\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MetricType = metric::EuclideanDistance, typename StatisticType = EmptyStatistic, typename MatType = arma::mat, typename SplitType = RTreeSplit, typename DescentType = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation>
.br
template<typename MetricType, typename StatisticType, typename MatType, typename SplitType, typename DescentType, template< typename > class AuxiliaryInformationType>
.br
class mlpack::tree::RectangleTree< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >::DualTreeTraverser< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >"
A dual tree traverser for rectangle type trees\&. 
.PP
Definition at line 31 of file dual_tree_traverser\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP (RuleType & rule)"

.PP
Instantiate the dual-tree traverser with the given rule set\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> static bool \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::nodeComparator (const \fBNodeAndScore\fP & obj1, const \fBNodeAndScore\fP & obj2)\fC [inline]\fP, \fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 80 of file dual_tree_traverser\&.hpp\&.
.PP
References mlpack::tree::RectangleTree< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >::DualTreeTraverser< MetricType, StatisticType, MatType, SplitType, DescentType, AuxiliaryInformationType >::NodeAndScore< RuleType >::score\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumBaseCases () const\fC [inline]\fP"

.PP
Get the number of times a base case was calculated\&. 
.PP
Definition at line 65 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t& \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumBaseCases ()\fC [inline]\fP"

.PP
Modify the number of times a base case was calculated\&. 
.PP
Definition at line 67 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumPrunes () const\fC [inline]\fP"

.PP
Get the number of prunes\&. 
.PP
Definition at line 50 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t& \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumPrunes ()\fC [inline]\fP"

.PP
Modify the number of prunes\&. 
.PP
Definition at line 52 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumScores () const\fC [inline]\fP"

.PP
Get the number of times a node combination was scored\&. 
.PP
Definition at line 60 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t& \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumScores ()\fC [inline]\fP"

.PP
Modify the number of times a node combination was scored\&. 
.PP
Definition at line 62 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumVisited () const\fC [inline]\fP"

.PP
Get the number of visited combinations\&. 
.PP
Definition at line 55 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t& \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::NumVisited ()\fC [inline]\fP"

.PP
Modify the number of visited combinations\&. 
.PP
Definition at line 57 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> void \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::Traverse (\fBRectangleTree\fP & queryNode, \fBRectangleTree\fP & referenceNode)"

.PP
Traverse the two trees\&. This does not reset the number of prunes\&.
.PP
\fBParameters:\fP
.RS 4
\fIqueryNode\fP The query node to be traversed\&. 
.br
\fIreferenceNode\fP The reference node to be traversed\&. 
.br
\fIscore\fP The score of the current node combination\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::numBaseCases\fC [private]\fP"

.PP
The number of times a base case was calculated\&. 
.PP
Definition at line 99 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::numPrunes\fC [private]\fP"

.PP
The number of prunes\&. 
.PP
Definition at line 90 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::numScores\fC [private]\fP"

.PP
The number of times a node combination was scored\&. 
.PP
Definition at line 96 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> size_t \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::numVisited\fC [private]\fP"

.PP
The number of node combinations that have been visited during traversal\&. 
.PP
Definition at line 93 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> RuleType& \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::rule\fC [private]\fP"

.PP
Reference to the rules with which the trees will be traversed\&. 
.PP
Definition at line 87 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat, typename SplitType  = RTreeSplit, typename DescentType  = RTreeDescentHeuristic, template< typename > class AuxiliaryInformationType = NoAuxiliaryInformation> template<typename MetricType , typename StatisticType , typename MatType , typename SplitType , typename DescentType , template< typename > class AuxiliaryInformationType> RuleType::TraversalInfoType \fBmlpack::tree::RectangleTree\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType, \fBSplitType\fP, \fBDescentType\fP, AuxiliaryInformationType >::traversalInfo\fC [private]\fP"

.PP
Traversal information, held in the class so that it isn't continually being reallocated\&. 
.PP
Definition at line 103 of file dual_tree_traverser\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
