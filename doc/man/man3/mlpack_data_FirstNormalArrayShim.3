.TH "mlpack::data::FirstNormalArrayShim< T >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::data::FirstNormalArrayShim< T > \- A first shim for arrays without a Serialize() method\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFirstNormalArrayShim\fP (T *\fBt\fP, const size_t \fBlen\fP, const \fBstd::string\fP &\fBname\fP)"
.br
.RI "\fIConstruct the first shim with the given objects, length, and name\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "const size_t \fBlen\fP"
.br
.ti -1c
.RI "const \fBstd::string\fP & \fBname\fP"
.br
.ti -1c
.RI "T * \fBt\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
struct mlpack::data::FirstNormalArrayShim< T >"
A first shim for arrays without a Serialize() method\&. 

This shim's purpose is to be caught by our overloads of operator<<, operator&, and operator>>, which then creates a second shim\&. 
.PP
Definition at line 64 of file serialization_shim\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> \fBmlpack::data::FirstNormalArrayShim\fP< T >::\fBFirstNormalArrayShim\fP (T * t, const size_t len, const \fBstd::string\fP & name)\fC [inline]\fP"

.PP
Construct the first shim with the given objects, length, and name\&. 
.PP
Definition at line 281 of file serialization_shim\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename T> const size_t \fBmlpack::data::FirstNormalArrayShim\fP< T >::len"

.PP
Definition at line 285 of file serialization_shim\&.hpp\&.
.PP
Referenced by mlpack::data::operator&(), and mlpack::data::operator>>()\&.
.SS "template<typename T> const \fBstd::string\fP& \fBmlpack::data::FirstNormalArrayShim\fP< T >::name"

.PP
Definition at line 286 of file serialization_shim\&.hpp\&.
.PP
Referenced by mlpack::data::operator&(), and mlpack::data::operator>>()\&.
.SS "template<typename T> T* \fBmlpack::data::FirstNormalArrayShim\fP< T >::t"

.PP
Definition at line 284 of file serialization_shim\&.hpp\&.
.PP
Referenced by mlpack::data::operator&(), and mlpack::data::operator>>()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
