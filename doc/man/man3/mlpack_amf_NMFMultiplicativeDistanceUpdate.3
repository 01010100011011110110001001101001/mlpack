.TH "mlpack::amf::NMFMultiplicativeDistanceUpdate" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::amf::NMFMultiplicativeDistanceUpdate \- The multiplicative distance update rules for matrices W and H\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNMFMultiplicativeDistanceUpdate\fP ()"
.br
.ti -1c
.RI "template<typename MatType > void \fBInitialize\fP (const MatType &, const size_t)"
.br
.RI "\fIInitialize the factorization\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &, const unsigned int)"
.br
.RI "\fISerialize the object (in this case, there is nothing to serialize)\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename MatType > static void \fBHUpdate\fP (const MatType &V, const arma::mat &W, arma::mat &H)"
.br
.RI "\fIThe update rule for the encoding matrix H\&. \fP"
.ti -1c
.RI "template<typename MatType > static void \fBWUpdate\fP (const MatType &V, arma::mat &W, const arma::mat &H)"
.br
.RI "\fIThe update rule for the basis matrix W\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The multiplicative distance update rules for matrices W and H\&. 

This follows a method described in the following paper:
.PP
.PP
.nf
@inproceedings{lee2001algorithms,
  title={Algorithms for non-negative matrix factorization},
  author={Lee, D\&.D\&. and Seung, H\&.S\&.},
  booktitle={Advances in Neural Information Processing Systems 13
      (NIPS 2000)},
  pages={556--562},
  year={2001}
}
.fi
.PP
.PP
This is a multiplicative rule that ensures that the Frobenius norm $ \sqrt{\sum_i \sum_j(V-WH)^2} $ is non-increasing between subsequent iterations\&. Both of the update rules for W and H are defined in this file\&. 
.PP
Definition at line 39 of file nmf_mult_dist\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::amf::NMFMultiplicativeDistanceUpdate::NMFMultiplicativeDistanceUpdate ()\fC [inline]\fP"

.PP
Definition at line 43 of file nmf_mult_dist\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename MatType > static void mlpack::amf::NMFMultiplicativeDistanceUpdate::HUpdate (const MatType & V, const arma::mat & W, arma::mat & H)\fC [inline]\fP, \fC [static]\fP"

.PP
The update rule for the encoding matrix H\&. The formula used is
.PP
\[ H_{a\mu} \leftarrow H_{a\mu} \frac{(W^T V)_{a\mu}}{(W^T WH)_{a\mu}} \].PP
The function takes in all the matrices and only changes the value of the H matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix\&. 
.br
\fIH\fP Encoding matrix to be updated\&. 
.RE
.PP

.PP
Definition at line 92 of file nmf_mult_dist\&.hpp\&.
.SS "template<typename MatType > void mlpack::amf::NMFMultiplicativeDistanceUpdate::Initialize (const MatType &, const size_t)\fC [inline]\fP"

.PP
Initialize the factorization\&. These update rules hold no information, so the input parameters are ignored\&. 
.PP
Definition at line 50 of file nmf_mult_dist\&.hpp\&.
.SS "template<typename Archive > void mlpack::amf::NMFMultiplicativeDistanceUpdate::Serialize (Archive &, const unsigned int)\fC [inline]\fP"

.PP
Serialize the object (in this case, there is nothing to serialize)\&. 
.PP
Definition at line 101 of file nmf_mult_dist\&.hpp\&.
.SS "template<typename MatType > static void mlpack::amf::NMFMultiplicativeDistanceUpdate::WUpdate (const MatType & V, arma::mat & W, const arma::mat & H)\fC [inline]\fP, \fC [static]\fP"

.PP
The update rule for the basis matrix W\&. The formula used isa
.PP
\[ W_{ia} \leftarrow W_{ia} \frac{(VH^T)_{ia}}{(WHH^T)_{ia}} \].PP
The function takes in all the matrices and only changes the value of the W matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix to be updated\&. 
.br
\fIH\fP Encoding matrix\&. 
.RE
.PP

.PP
Definition at line 70 of file nmf_mult_dist\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
