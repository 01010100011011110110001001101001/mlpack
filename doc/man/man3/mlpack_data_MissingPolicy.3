.TH "mlpack::data::MissingPolicy" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::data::MissingPolicy \- \fBMissingPolicy\fP is used as a helper class for \fBDatasetMapper\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBMappedType\fP = double"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMissingPolicy\fP ()"
.br
.ti -1c
.RI "\fBMissingPolicy\fP (\fBstd::set\fP< \fBstd::string\fP > \fBmissingSet\fP)"
.br
.RI "\fICreate the \fBMissingPolicy\fP object with the given missingSet\&. \fP"
.ti -1c
.RI "template<typename T > void \fBMapFirstPass\fP (const \fBstd::string\fP &, const size_t)"
.br
.RI "\fIThere is nothing for us to do here, but this is required by the MapPolicy type\&. \fP"
.ti -1c
.RI "template<typename MapType , typename T > T \fBMapString\fP (const \fBstd::string\fP &\fBstring\fP, const size_t dimension, MapType &maps, std::vector< \fBDatatype\fP > &)"
.br
.RI "\fIGiven the string and the dimension to which it belongs by the user, and the maps and types given by the \fBDatasetMapper\fP class, returns its numeric mapping\&. \fP"
.ti -1c
.RI "template<typename eT , typename MapType > void \fBMapTokens\fP (const std::vector< \fBstd::string\fP > &tokens, size_t &row, arma::Mat< eT > &matrix, MapType &maps, std::vector< \fBDatatype\fP > &types)"
.br
.RI "\fIMapTokens turns vector of strings into numeric variables and puts them into a given matrix\&. \fP"
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const bool \fBNeedsFirstPass\fP = false"
.br
.RI "\fIThis doesn't need a first pass over the data to set up\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBstd::set\fP< \fBstd::string\fP > \fBmissingSet\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBMissingPolicy\fP is used as a helper class for \fBDatasetMapper\fP\&. 

It tells how the strings should be mapped\&. Purpose of this policy is to map all user-defined missing variables into maps so that users can decide what to do with the corrupted data\&. User-defined missing variables are given by the missingSet\&. Note that \fBMissingPolicy\fP does not change type of features\&. 
.PP
Definition at line 31 of file missing_policy\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "using \fBmlpack::data::MissingPolicy::MappedType\fP =  double"

.PP
Definition at line 35 of file missing_policy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::data::MissingPolicy::MissingPolicy ()\fC [inline]\fP"

.PP
Definition at line 37 of file missing_policy\&.hpp\&.
.SS "mlpack::data::MissingPolicy::MissingPolicy (\fBstd::set\fP< \fBstd::string\fP > missingSet)\fC [inline]\fP, \fC [explicit]\fP"

.PP
Create the \fBMissingPolicy\fP object with the given missingSet\&. Note that the missingSet cannot be changed later; you will have to create a new \fBMissingPolicy\fP object\&.
.PP
\fBParameters:\fP
.RS 4
\fImissingSet\fP Set of strings that should be mapped\&. 
.RE
.PP

.PP
Definition at line 49 of file missing_policy\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T > void mlpack::data::MissingPolicy::MapFirstPass (const \fBstd::string\fP &, const size_t)\fC [inline]\fP"

.PP
There is nothing for us to do here, but this is required by the MapPolicy type\&. 
.PP
Definition at line 63 of file missing_policy\&.hpp\&.
.SS "template<typename MapType , typename T > T mlpack::data::MissingPolicy::MapString (const \fBstd::string\fP & string, const size_t dimension, MapType & maps, std::vector< \fBDatatype\fP > &)\fC [inline]\fP"

.PP
Given the string and the dimension to which it belongs by the user, and the maps and types given by the \fBDatasetMapper\fP class, returns its numeric mapping\&. If no mapping yet exists and the string is included in the missingSet, the string is added to the list of mappings for the given dimension\&. This function is used as a helper function for \fBDatasetMapper\fP class\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMapType\fP Type of unordered_map that contains mapped value pairs 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIstring\fP String to find/create mapping for\&. 
.br
\fIdimension\fP Index of the dimension of the string\&. 
.br
\fImaps\fP Unordered map given by the \fBDatasetMapper\fP\&. 
.br
\fItypes\fP Vector containing the type information about each dimensions\&. 
.RE
.PP

.PP
Definition at line 83 of file missing_policy\&.hpp\&.
.PP
References missingSet\&.
.PP
Referenced by MapTokens()\&.
.SS "template<typename eT , typename MapType > void mlpack::data::MissingPolicy::MapTokens (const std::vector< \fBstd::string\fP > & tokens, size_t & row, arma::Mat< eT > & matrix, MapType & maps, std::vector< \fBDatatype\fP > & types)\fC [inline]\fP"

.PP
MapTokens turns vector of strings into numeric variables and puts them into a given matrix\&. It is used as a helper function when trying to load files\&. Each dimension's tokens are given in to this function\&. If one of the tokens turns out to be a string or one of the missingSet's variables, only the token responsible for it should be mapped using the \fBMapString()\fP funciton\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIeT\fP Type of armadillo matrix\&. 
.br
\fIMapType\fP Type of unordered_map that contains mapped value pairs\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fItokens\fP Vector of variables inside a dimension\&. 
.br
\fIrow\fP Position of the given tokens\&. 
.br
\fImatrix\fP Matrix to save the data into\&. 
.br
\fImaps\fP Maps given by the \fBDatasetMapper\fP class\&. 
.br
\fItypes\fP Types of each dimensions given by the \fBDatasetMapper\fP class\&. 
.RE
.PP

.PP
Definition at line 140 of file missing_policy\&.hpp\&.
.PP
References MapString(), and missingSet\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBstd::set\fP<\fBstd::string\fP> mlpack::data::MissingPolicy::missingSet\fC [private]\fP"

.PP
Definition at line 171 of file missing_policy\&.hpp\&.
.PP
Referenced by MapString(), and MapTokens()\&.
.SS "const bool mlpack::data::MissingPolicy::NeedsFirstPass = false\fC [static]\fP"

.PP
This doesn't need a first pass over the data to set up\&. 
.PP
Definition at line 56 of file missing_policy\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
