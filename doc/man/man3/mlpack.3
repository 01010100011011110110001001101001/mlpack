.TH "mlpack" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack \- Linear algebra utility functions, generally performed on matrices or vectors\&.  

.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBadaboost\fP"
.br
.ti -1c
.RI " \fBamf\fP"
.br
.RI "\fIAlternating Matrix Factorization\&. \fP"
.ti -1c
.RI " \fBann\fP"
.br
.RI "\fIArtificial Neural Network\&. \fP"
.ti -1c
.RI " \fBbound\fP"
.br
.ti -1c
.RI " \fBcf\fP"
.br
.RI "\fICollaborative filtering\&. \fP"
.ti -1c
.RI " \fBdata\fP"
.br
.RI "\fIFunctions to load and save matrices and models\&. \fP"
.ti -1c
.RI " \fBdbscan\fP"
.br
.ti -1c
.RI " \fBdecision_stump\fP"
.br
.ti -1c
.RI " \fBdet\fP"
.br
.RI "\fIDensity Estimation Trees\&. \fP"
.ti -1c
.RI " \fBdistribution\fP"
.br
.RI "\fIProbability distributions\&. \fP"
.ti -1c
.RI " \fBemst\fP"
.br
.RI "\fIEuclidean Minimum Spanning Trees\&. \fP"
.ti -1c
.RI " \fBfastmks\fP"
.br
.RI "\fIFast max-kernel search\&. \fP"
.ti -1c
.RI " \fBgmm\fP"
.br
.RI "\fIGaussian Mixture Models\&. \fP"
.ti -1c
.RI " \fBhmm\fP"
.br
.RI "\fIHidden Markov Models\&. \fP"
.ti -1c
.RI " \fBkernel\fP"
.br
.RI "\fIKernel functions\&. \fP"
.ti -1c
.RI " \fBkmeans\fP"
.br
.RI "\fIK-Means clustering\&. \fP"
.ti -1c
.RI " \fBkpca\fP"
.br
.ti -1c
.RI " \fBlcc\fP"
.br
.ti -1c
.RI " \fBmath\fP"
.br
.RI "\fIMiscellaneous math routines\&. \fP"
.ti -1c
.RI " \fBmatrix_completion\fP"
.br
.ti -1c
.RI " \fBmeanshift\fP"
.br
.RI "\fIMean shift clustering\&. \fP"
.ti -1c
.RI " \fBmetric\fP"
.br
.ti -1c
.RI " \fBmvu\fP"
.br
.ti -1c
.RI " \fBnaive_bayes\fP"
.br
.RI "\fIThe Naive Bayes Classifier\&. \fP"
.ti -1c
.RI " \fBnca\fP"
.br
.RI "\fINeighborhood Components Analysis\&. \fP"
.ti -1c
.RI " \fBneighbor\fP"
.br
.RI "\fINeighbor-search routines\&. \fP"
.ti -1c
.RI " \fBnn\fP"
.br
.ti -1c
.RI " \fBoptimization\fP"
.br
.ti -1c
.RI " \fBpca\fP"
.br
.ti -1c
.RI " \fBperceptron\fP"
.br
.ti -1c
.RI " \fBradical\fP"
.br
.ti -1c
.RI " \fBrange\fP"
.br
.RI "\fIRange-search routines\&. \fP"
.ti -1c
.RI " \fBregression\fP"
.br
.RI "\fIRegression methods\&. \fP"
.ti -1c
.RI " \fBsparse_coding\fP"
.br
.ti -1c
.RI " \fBsvd\fP"
.br
.ti -1c
.RI " \fBtree\fP"
.br
.RI "\fITrees and tree-building procedures\&. \fP"
.ti -1c
.RI " \fButil\fP"
.br
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBBacktrace\fP"
.br
.RI "\fIProvides a backtrace\&. \fP"
.ti -1c
.RI "class \fBCLI\fP"
.br
.RI "\fIParses the command line for parameters and holds user-specified parameters\&. \fP"
.ti -1c
.RI "class \fBLog\fP"
.br
.RI "\fIProvides a convenient way to give formatted output\&. \fP"
.ti -1c
.RI "class \fBTimer\fP"
.br
.RI "\fIThe timer class provides a way for mlpack methods to be timed\&. \fP"
.ti -1c
.RI "class \fBTimers\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBCheckMatrices\fP (const arma::mat &x, const arma::mat &xmlX, const arma::mat &textX, const arma::mat &binaryX)"
.br
.ti -1c
.RI "void \fBCheckMatrices\fP (const arma::Mat< size_t > &x, const arma::Mat< size_t > &xmlX, const arma::Mat< size_t > &textX, const arma::Mat< size_t > &binaryX)"
.br
.ti -1c
.RI "template<typename T , typename IArchiveType , typename OArchiveType > void \fBSerializeObject\fP (T &t, T &newT)"
.br
.ti -1c
.RI "template<typename T > void \fBSerializeObjectAll\fP (T &t, T &xmlT, T &textT, T &binaryT)"
.br
.ti -1c
.RI "template<typename T , typename IArchiveType , typename OArchiveType > void \fBSerializePointerObject\fP (T *t, T *&newT)"
.br
.ti -1c
.RI "template<typename T > void \fBSerializePointerObjectAll\fP (T *t, T *&xmlT, T *&textT, T *&binaryT)"
.br
.ti -1c
.RI "template<typename CubeType > void \fBTestAllArmadilloSerialization\fP (arma::Cube< CubeType > &x)"
.br
.ti -1c
.RI "template<typename MatType > void \fBTestAllArmadilloSerialization\fP (MatType &x)"
.br
.ti -1c
.RI "template<typename CubeType , typename IArchiveType , typename OArchiveType > void \fBTestArmadilloSerialization\fP (arma::Cube< CubeType > &x)"
.br
.ti -1c
.RI "template<typename MatType , typename IArchiveType , typename OArchiveType > void \fBTestArmadilloSerialization\fP (MatType &x)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Linear algebra utility functions, generally performed on matrices or vectors\&. 

This class is used to update the weightVectors matrix according to the simple update rule as discussed by Rosenblatt:
.PP
if a vector x has been incorrectly classified by a weight w, then w = w - x and w'= w'+ x
.PP
where w' is the weight vector which correctly classifies x\&. 
.SH "Function Documentation"
.PP 
.SS "void mlpack::CheckMatrices (const arma::mat & x, const arma::mat & xmlX, const arma::mat & textX, const arma::mat & binaryX)"

.PP
Referenced by SerializePointerObjectAll()\&.
.SS "void mlpack::CheckMatrices (const arma::Mat< size_t > & x, const arma::Mat< size_t > & xmlX, const arma::Mat< size_t > & textX, const arma::Mat< size_t > & binaryX)"

.SS "template<typename T , typename IArchiveType , typename OArchiveType > void mlpack::SerializeObject (T & t, T & newT)"

.PP
Definition at line 172 of file serialization\&.hpp\&.
.PP
References mlpack::data::binary, and mlpack::data::CreateNVP()\&.
.PP
Referenced by SerializeObjectAll()\&.
.SS "template<typename T > void mlpack::SerializeObjectAll (T & t, T & xmlT, T & textT, T & binaryT)"

.PP
Definition at line 208 of file serialization\&.hpp\&.
.PP
References SerializeObject()\&.
.SS "template<typename T , typename IArchiveType , typename OArchiveType > void mlpack::SerializePointerObject (T * t, T *& newT)"

.PP
Definition at line 220 of file serialization\&.hpp\&.
.PP
References mlpack::data::binary, and mlpack::data::CreateNVP()\&.
.PP
Referenced by SerializePointerObjectAll()\&.
.SS "template<typename T > void mlpack::SerializePointerObjectAll (T * t, T *& xmlT, T *& textT, T *& binaryT)"

.PP
Definition at line 255 of file serialization\&.hpp\&.
.PP
References CheckMatrices(), and SerializePointerObject()\&.
.SS "template<typename CubeType > void mlpack::TestAllArmadilloSerialization (arma::Cube< CubeType > & x)"

.PP
Definition at line 93 of file serialization\&.hpp\&.
.PP
References TestArmadilloSerialization()\&.
.SS "template<typename MatType > void mlpack::TestAllArmadilloSerialization (MatType & x)"

.PP
Definition at line 159 of file serialization\&.hpp\&.
.PP
References TestArmadilloSerialization()\&.
.SS "template<typename CubeType , typename IArchiveType , typename OArchiveType > void mlpack::TestArmadilloSerialization (arma::Cube< CubeType > & x)"

.PP
Definition at line 33 of file serialization\&.hpp\&.
.PP
References mlpack::data::binary\&.
.PP
Referenced by TestAllArmadilloSerialization()\&.
.SS "template<typename MatType , typename IArchiveType , typename OArchiveType > void mlpack::TestArmadilloSerialization (MatType & x)"

.PP
Definition at line 107 of file serialization\&.hpp\&.
.PP
References mlpack::data::binary\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
