.TH "src/mlpack/core/data/load.hpp" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/mlpack/core/data/load.hpp \- 
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmlpack\fP"
.br
.RI "\fILinear algebra utility functions, generally performed on matrices or vectors\&. \fP"
.ti -1c
.RI " \fBmlpack::data\fP"
.br
.RI "\fIFunctions to load and save matrices and models\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename eT > bool \fBmlpack::data::Load\fP (const \fBstd::string\fP &filename, arma::Mat< eT > &matrix, const bool fatal=false, const bool transpose=true)"
.br
.RI "\fILoads a matrix from file, guessing the filetype from the extension\&. \fP"
.ti -1c
.RI "template<typename eT > bool \fBmlpack::data::Load\fP (const \fBstd::string\fP &filename, arma::Col< eT > &vec, const bool fatal=false)"
.br
.RI "\fILoad a column vector from a file, guessing the filetype from the extension\&. \fP"
.ti -1c
.RI "template<typename eT > bool \fBmlpack::data::Load\fP (const \fBstd::string\fP &filename, arma::Row< eT > &rowvec, const bool fatal=false)"
.br
.RI "\fILoad a row vector from a file, guessing the filetype from the extension\&. \fP"
.ti -1c
.RI "template<typename eT , typename PolicyType > bool \fBmlpack::data::Load\fP (const \fBstd::string\fP &filename, arma::Mat< eT > &matrix, DatasetMapper< PolicyType > &info, const bool fatal=false, const bool transpose=true)"
.br
.RI "\fILoads a matrix from a file, guessing the filetype from the extension and mapping categorical features with a \fBDatasetMapper\fP object\&. \fP"
.ti -1c
.RI "template<typename T > bool \fBmlpack::data::Load\fP (const \fBstd::string\fP &filename, const \fBstd::string\fP &name, T &t, const bool fatal=false, format f=format::autodetect)"
.br
.RI "\fILoad a model from a file, guessing the filetype from the extension, or, optionally, loading the specified format\&. \fP"
.ti -1c
.RI "template bool \fBmlpack::data::Load< double >\fP (const \fBstd::string\fP &, arma::Mat< double > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< double, IncrementPolicy >\fP (const \fBstd::string\fP &, arma::Mat< double > &, DatasetMapper< IncrementPolicy > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< float >\fP (const \fBstd::string\fP &, arma::Mat< float > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< float, IncrementPolicy >\fP (const \fBstd::string\fP &, arma::Mat< float > &, DatasetMapper< IncrementPolicy > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< int >\fP (const \fBstd::string\fP &, arma::Mat< int > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< int, IncrementPolicy >\fP (const \fBstd::string\fP &, arma::Mat< int > &, DatasetMapper< IncrementPolicy > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< size_t >\fP (const \fBstd::string\fP &, arma::Mat< size_t > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< size_t, IncrementPolicy >\fP (const \fBstd::string\fP &, arma::Mat< size_t > &, DatasetMapper< IncrementPolicy > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< unsigned long long >\fP (const \fBstd::string\fP &, arma::Mat< unsigned long long > &, const bool, const bool)"
.br
.ti -1c
.RI "template bool \fBmlpack::data::Load< unsigned long long, IncrementPolicy >\fP (const \fBstd::string\fP &, arma::Mat< unsigned long long > &, DatasetMapper< IncrementPolicy > &, const bool, const bool)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Ryan Curtin
.RE
.PP
Load an Armadillo matrix from file\&. This is necessary because Armadillo does not transpose matrices on input, and it allows us to give better error output\&.
.PP
mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license\&. You should have received a copy of the 3-clause BSD license along with mlpack\&. If not, see http://www.opensource.org/licenses/BSD-3-Clause for more information\&. 
.PP
Definition in file \fBload\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
