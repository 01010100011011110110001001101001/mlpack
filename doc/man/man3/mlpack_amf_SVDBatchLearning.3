.TH "mlpack::amf::SVDBatchLearning" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::amf::SVDBatchLearning \- This class implements SVD batch learning with momentum\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSVDBatchLearning\fP (double \fBu\fP=0\&.0002, double \fBkw\fP=0, double \fBkh\fP=0, double \fBmomentum\fP=0\&.9)"
.br
.RI "\fISVD Batch learning constructor\&. \fP"
.ti -1c
.RI "template<typename MatType > void \fBHUpdate\fP (const MatType &V, const arma::mat &W, arma::mat &H)"
.br
.RI "\fIThe update rule for the encoding matrix H\&. \fP"
.ti -1c
.RI "template<typename MatType > void \fBInitialize\fP (const MatType &dataset, const size_t rank)"
.br
.RI "\fIInitialize parameters before factorization\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &ar, const unsigned int)"
.br
.RI "\fISerialize the SVDBatch object\&. \fP"
.ti -1c
.RI "template<typename MatType > void \fBWUpdate\fP (const MatType &V, arma::mat &W, const arma::mat &H)"
.br
.RI "\fIThe update rule for the basis matrix W\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBkh\fP"
.br
.RI "\fIRegularization parameter for matrix H\&. \fP"
.ti -1c
.RI "double \fBkw\fP"
.br
.RI "\fIRegularization parameter for matrix W\&. \fP"
.ti -1c
.RI "arma::mat \fBmH\fP"
.br
.RI "\fIMomentum matrix for matrix H\&. \fP"
.ti -1c
.RI "double \fBmomentum\fP"
.br
.RI "\fIMomentum value (between 0 and 1)\&. \fP"
.ti -1c
.RI "arma::mat \fBmW\fP"
.br
.RI "\fIMomentum matrix for matrix W\&. \fP"
.ti -1c
.RI "double \fBu\fP"
.br
.RI "\fIStep size of the algorithm\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class implements SVD batch learning with momentum\&. 

This procedure is described in the following paper:
.PP
.PP
.nf
@techreport{ma2008guide,
  title={A Guide to Singular Value Decomposition for Collaborative
      Filtering},
  author={Ma, Chih-Chao},
  year={2008},
  institution={Department of Computer Science, National Taiwan University}
}
.fi
.PP
.PP
This class implements 'Algorithm 4' as given in the paper\&.
.PP
The factorizer decomposes the matrix V into two matrices W and H such that sum of sum of squared error between V and W * H is minimum\&. This optimization is performed with gradient descent\&. To make gradient descent faster, momentum is added\&. 
.PP
Definition at line 41 of file svd_batch_learning\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::amf::SVDBatchLearning::SVDBatchLearning (double u = \fC0\&.0002\fP, double kw = \fC0\fP, double kh = \fC0\fP, double momentum = \fC0\&.9\fP)\fC [inline]\fP"

.PP
SVD Batch learning constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP step value used in batch learning 
.br
\fIkw\fP regularization constant for W matrix 
.br
\fIkh\fP regularization constant for H matrix 
.br
\fImomentum\fP momentum applied to batch learning process 
.RE
.PP

.PP
Definition at line 52 of file svd_batch_learning\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::HUpdate (const MatType & V, const arma::mat & W, arma::mat & H)\fC [inline]\fP"

.PP
The update rule for the encoding matrix H\&. The function takes in all the matrices and only changes the value of the H matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix\&. 
.br
\fIH\fP Encoding matrix to be updated\&. 
.RE
.PP

.PP
Definition at line 133 of file svd_batch_learning\&.hpp\&.
.PP
References kh, mH, momentum, and u\&.
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::Initialize (const MatType & dataset, const size_t rank)\fC [inline]\fP"

.PP
Initialize parameters before factorization\&. This function must be called before a new factorization\&. This resets the internally-held momentum\&.
.PP
\fBParameters:\fP
.RS 4
\fIdataset\fP Input matrix to be factorized\&. 
.br
\fIrank\fP rank of factorization 
.RE
.PP

.PP
Definition at line 69 of file svd_batch_learning\&.hpp\&.
.PP
References mH, and mW\&.
.SS "template<typename Archive > void mlpack::amf::SVDBatchLearning::Serialize (Archive & ar, const unsigned int)\fC [inline]\fP"

.PP
Serialize the SVDBatch object\&. 
.PP
Definition at line 169 of file svd_batch_learning\&.hpp\&.
.PP
References mlpack::data::CreateNVP(), kh, kw, mH, momentum, mW, and u\&.
.SS "template<typename MatType > void mlpack::amf::SVDBatchLearning::WUpdate (const MatType & V, arma::mat & W, const arma::mat & H)\fC [inline]\fP"

.PP
The update rule for the basis matrix W\&. The function takes in all the matrices and only changes the value of the W matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix to be updated\&. 
.br
\fIH\fP Encoding matrix\&. 
.RE
.PP

.PP
Definition at line 88 of file svd_batch_learning\&.hpp\&.
.PP
References kw, momentum, mW, and u\&.
.SH "Member Data Documentation"
.PP 
.SS "double mlpack::amf::SVDBatchLearning::kh\fC [private]\fP"

.PP
Regularization parameter for matrix H\&. 
.PP
Definition at line 186 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), Serialize(), and mlpack::amf::SVDBatchLearning::HUpdate< arma::sp_mat >()\&.
.SS "double mlpack::amf::SVDBatchLearning::kw\fC [private]\fP"

.PP
Regularization parameter for matrix W\&. 
.PP
Definition at line 184 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by Serialize(), mlpack::amf::SVDBatchLearning::WUpdate< arma::sp_mat >(), and WUpdate()\&.
.SS "arma::mat mlpack::amf::SVDBatchLearning::mH\fC [private]\fP"

.PP
Momentum matrix for matrix H\&. 
.PP
Definition at line 193 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), Initialize(), Serialize(), and mlpack::amf::SVDBatchLearning::HUpdate< arma::sp_mat >()\&.
.SS "double mlpack::amf::SVDBatchLearning::momentum\fC [private]\fP"

.PP
Momentum value (between 0 and 1)\&. 
.PP
Definition at line 188 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), Serialize(), mlpack::amf::SVDBatchLearning::HUpdate< arma::sp_mat >(), mlpack::amf::SVDBatchLearning::WUpdate< arma::sp_mat >(), and WUpdate()\&.
.SS "arma::mat mlpack::amf::SVDBatchLearning::mW\fC [private]\fP"

.PP
Momentum matrix for matrix W\&. 
.PP
Definition at line 191 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by Initialize(), Serialize(), mlpack::amf::SVDBatchLearning::WUpdate< arma::sp_mat >(), and WUpdate()\&.
.SS "double mlpack::amf::SVDBatchLearning::u\fC [private]\fP"

.PP
Step size of the algorithm\&. 
.PP
Definition at line 182 of file svd_batch_learning\&.hpp\&.
.PP
Referenced by HUpdate(), Serialize(), mlpack::amf::SVDBatchLearning::HUpdate< arma::sp_mat >(), mlpack::amf::SVDBatchLearning::WUpdate< arma::sp_mat >(), and WUpdate()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
