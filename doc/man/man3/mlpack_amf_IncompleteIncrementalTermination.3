.TH "mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy > \- This class acts as a wrapper for basic termination policies to be used by \fBSVDIncompleteIncrementalLearning\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBIncompleteIncrementalTermination\fP (TerminationPolicy \fBtPolicy\fP=TerminationPolicy())"
.br
.RI "\fIEmpty constructor\&. \fP"
.ti -1c
.RI "const double & \fBIndex\fP () const "
.br
.RI "\fIGet current value of residue\&. \fP"
.ti -1c
.RI "template<class MatType > void \fBInitialize\fP (const MatType &V)"
.br
.RI "\fIInitializes the termination policy before stating the factorization\&. \fP"
.ti -1c
.RI "bool \fBIsConverged\fP (arma::mat &W, arma::mat &H)"
.br
.RI "\fICheck if termination criterio is met\&. \fP"
.ti -1c
.RI "const size_t & \fBIteration\fP () const "
.br
.RI "\fIGet current iteration count\&. \fP"
.ti -1c
.RI "size_t \fBMaxIterations\fP () const "
.br
.RI "\fIAccess maximum number of iterations\&. \fP"
.ti -1c
.RI "size_t & \fBMaxIterations\fP ()"
.br
.RI "\fIModify maximum number of iterations\&. \fP"
.ti -1c
.RI "const TerminationPolicy & \fBTPolicy\fP () const "
.br
.RI "\fIAccess the wrapped termination policy\&. \fP"
.ti -1c
.RI "TerminationPolicy & \fBTPolicy\fP ()"
.br
.RI "\fIModify the wrapped termination policy\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBincrementalIndex\fP"
.br
.RI "\fINumber of iterations after which wrapped class object will be called\&. \fP"
.ti -1c
.RI "size_t \fBiteration\fP"
.br
.RI "\fICurrent iteration count\&. \fP"
.ti -1c
.RI "TerminationPolicy \fBtPolicy\fP"
.br
.RI "\fIWrapped termination policy\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class TerminationPolicy>
.br
class mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >"
This class acts as a wrapper for basic termination policies to be used by \fBSVDIncompleteIncrementalLearning\fP\&. 

This class calls the wrapped class functions after every n calls to main class functions where n is the number of rows\&.
.PP
\fBSee also:\fP
.RS 4
\fBAMF\fP, \fBSVDIncompleteIncrementalLearning\fP 
.RE
.PP

.PP
Definition at line 28 of file incomplete_incremental_termination\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class TerminationPolicy > \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::\fBIncompleteIncrementalTermination\fP (TerminationPolicy tPolicy = \fCTerminationPolicy()\fP)\fC [inline]\fP"

.PP
Empty constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fItPolicy\fP object of wrapped class\&. 
.RE
.PP

.PP
Definition at line 36 of file incomplete_incremental_termination\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "template<class TerminationPolicy > const double& \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::Index () const\fC [inline]\fP"

.PP
Get current value of residue\&. 
.PP
Definition at line 75 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > template<class MatType > void \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::Initialize (const MatType & V)\fC [inline]\fP"

.PP
Initializes the termination policy before stating the factorization\&. 
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.RE
.PP

.PP
Definition at line 46 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::incrementalIndex, mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::iteration, and mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > bool \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::IsConverged (arma::mat & W, arma::mat & H)\fC [inline]\fP"

.PP
Check if termination criterio is met\&. 
.PP
\fBParameters:\fP
.RS 4
\fIW\fP Basis matrix of output\&. 
.br
\fIH\fP Encoding matrix of output\&. 
.RE
.PP

.PP
Definition at line 61 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::incrementalIndex, mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::iteration, and mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > const size_t& \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::Iteration () const\fC [inline]\fP"

.PP
Get current iteration count\&. 
.PP
Definition at line 78 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::iteration\&.
.SS "template<class TerminationPolicy > size_t \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::MaxIterations () const\fC [inline]\fP"

.PP
Access maximum number of iterations\&. 
.PP
Definition at line 81 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > size_t& \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::MaxIterations ()\fC [inline]\fP"

.PP
Modify maximum number of iterations\&. 
.PP
Definition at line 83 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > const TerminationPolicy& \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::TPolicy () const\fC [inline]\fP"

.PP
Access the wrapped termination policy\&. 
.PP
Definition at line 86 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SS "template<class TerminationPolicy > TerminationPolicy& \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::TPolicy ()\fC [inline]\fP"

.PP
Modify the wrapped termination policy\&. 
.PP
Definition at line 88 of file incomplete_incremental_termination\&.hpp\&.
.PP
References mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::tPolicy\&.
.SH "Member Data Documentation"
.PP 
.SS "template<class TerminationPolicy > size_t \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::incrementalIndex\fC [private]\fP"

.PP
Number of iterations after which wrapped class object will be called\&. 
.PP
Definition at line 95 of file incomplete_incremental_termination\&.hpp\&.
.PP
Referenced by mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::Initialize(), and mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::IsConverged()\&.
.SS "template<class TerminationPolicy > size_t \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::iteration\fC [private]\fP"

.PP
Current iteration count\&. 
.PP
Definition at line 97 of file incomplete_incremental_termination\&.hpp\&.
.PP
Referenced by mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::Initialize(), mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::IsConverged(), and mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::Iteration()\&.
.SS "template<class TerminationPolicy > TerminationPolicy \fBmlpack::amf::IncompleteIncrementalTermination\fP< TerminationPolicy >::tPolicy\fC [private]\fP"

.PP
Wrapped termination policy\&. 
.PP
Definition at line 92 of file incomplete_incremental_termination\&.hpp\&.
.PP
Referenced by mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::Index(), mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::Initialize(), mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::IsConverged(), mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::MaxIterations(), and mlpack::amf::IncompleteIncrementalTermination< TerminationPolicy >::TPolicy()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
