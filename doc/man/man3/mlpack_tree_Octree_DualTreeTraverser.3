.TH "mlpack::tree::Octree< MetricType, StatisticType, MatType >::DualTreeTraverser< MetricType, StatisticType, MatType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::tree::Octree< MetricType, StatisticType, MatType >::DualTreeTraverser< MetricType, StatisticType, MatType > \- A dual-tree traverser; see dual_tree_traverser\&.hpp\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDualTreeTraverser\fP (RuleType &\fBrule\fP)"
.br
.RI "\fIInstantiate the given dual-tree traverser with the given rule set\&. \fP"
.ti -1c
.RI "size_t \fBNumBaseCases\fP () const "
.br
.RI "\fIGet the number of times a base case was computed\&. \fP"
.ti -1c
.RI "size_t & \fBNumBaseCases\fP ()"
.br
.RI "\fIModify the number of times a base case was computed\&. \fP"
.ti -1c
.RI "size_t \fBNumPrunes\fP () const "
.br
.RI "\fIGet the number of pruned nodes\&. \fP"
.ti -1c
.RI "size_t & \fBNumPrunes\fP ()"
.br
.RI "\fIModify the number of pruned nodes (i\&.e\&. to reset it)\&. \fP"
.ti -1c
.RI "size_t \fBNumScores\fP () const "
.br
.RI "\fIGet the number of times a node was scored\&. \fP"
.ti -1c
.RI "size_t & \fBNumScores\fP ()"
.br
.RI "\fIModify the number of times a node was scored\&. \fP"
.ti -1c
.RI "size_t \fBNumVisited\fP () const "
.br
.RI "\fIGet the number of visited node combinations\&. \fP"
.ti -1c
.RI "size_t & \fBNumVistied\fP ()"
.br
.RI "\fIModify the number of visited node combinations\&. \fP"
.ti -1c
.RI "void \fBTraverse\fP (\fBOctree\fP &queryNode, \fBOctree\fP &referenceNode)"
.br
.RI "\fITraverse the two trees\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBnumBaseCases\fP"
.br
.RI "\fIThe number of times a base case was calculated\&. \fP"
.ti -1c
.RI "size_t \fBnumPrunes\fP"
.br
.RI "\fIThe number of prunes\&. \fP"
.ti -1c
.RI "size_t \fBnumScores\fP"
.br
.RI "\fIThe number of times a node was scored\&. \fP"
.ti -1c
.RI "size_t \fBnumVisited\fP"
.br
.RI "\fIThe number of visited node combinations\&. \fP"
.ti -1c
.RI "RuleType & \fBrule\fP"
.br
.RI "\fIThe rule type to use\&. \fP"
.ti -1c
.RI "RuleType::TraversalInfoType \fBtraversalInfo\fP"
.br
.RI "\fITraversal information, held in the class so that it isn't continually being reallocated\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MetricType = metric::EuclideanDistance, typename StatisticType = EmptyStatistic, typename MatType = arma::mat>
.br
template<typename MetricType, typename StatisticType, typename MatType>
.br
class mlpack::tree::Octree< MetricType, StatisticType, MatType >::DualTreeTraverser< MetricType, StatisticType, MatType >"
A dual-tree traverser; see dual_tree_traverser\&.hpp\&. 
.PP
Definition at line 25 of file dual_tree_traverser\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP (RuleType & rule)"

.PP
Instantiate the given dual-tree traverser with the given rule set\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumBaseCases () const\fC [inline]\fP"

.PP
Get the number of times a base case was computed\&. 
.PP
Definition at line 55 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t& \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumBaseCases ()\fC [inline]\fP"

.PP
Modify the number of times a base case was computed\&. 
.PP
Definition at line 57 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumPrunes () const\fC [inline]\fP"

.PP
Get the number of pruned nodes\&. 
.PP
Definition at line 40 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t& \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumPrunes ()\fC [inline]\fP"

.PP
Modify the number of pruned nodes (i\&.e\&. to reset it)\&. 
.PP
Definition at line 42 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumScores () const\fC [inline]\fP"

.PP
Get the number of times a node was scored\&. 
.PP
Definition at line 50 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t& \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumScores ()\fC [inline]\fP"

.PP
Modify the number of times a node was scored\&. 
.PP
Definition at line 52 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumVisited () const\fC [inline]\fP"

.PP
Get the number of visited node combinations\&. 
.PP
Definition at line 45 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t& \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::NumVistied ()\fC [inline]\fP"

.PP
Modify the number of visited node combinations\&. 
.PP
Definition at line 47 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > void \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::Traverse (\fBOctree\fP & queryNode, \fBOctree\fP & referenceNode)"

.PP
Traverse the two trees\&. This does not reset the statistics of the traversals (it just adds to them)\&. 
.SH "Member Data Documentation"
.PP 
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::numBaseCases\fC [private]\fP"

.PP
The number of times a base case was calculated\&. 
.PP
Definition at line 70 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::numPrunes\fC [private]\fP"

.PP
The number of prunes\&. 
.PP
Definition at line 64 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::numScores\fC [private]\fP"

.PP
The number of times a node was scored\&. 
.PP
Definition at line 68 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > size_t \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::numVisited\fC [private]\fP"

.PP
The number of visited node combinations\&. 
.PP
Definition at line 66 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > RuleType& \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::rule\fC [private]\fP"

.PP
The rule type to use\&. 
.PP
Definition at line 61 of file dual_tree_traverser\&.hpp\&.
.SS "template<typename MetricType  = metric::EuclideanDistance, typename StatisticType  = EmptyStatistic, typename MatType  = arma::mat> template<typename MetricType , typename StatisticType , typename MatType > RuleType::TraversalInfoType \fBmlpack::tree::Octree\fP< MetricType, StatisticType, MatType >::\fBDualTreeTraverser\fP< MetricType, StatisticType, MatType >::traversalInfo\fC [private]\fP"

.PP
Traversal information, held in the class so that it isn't continually being reallocated\&. 
.PP
Definition at line 74 of file dual_tree_traverser\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
