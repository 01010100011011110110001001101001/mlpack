.TH "mlpack::data::LoadCSV" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::data::LoadCSV \- Load the csv file\&.This class use boost::spirit to implement the parser, please refer to following link http://theboostcpplibraries.com/boost.spirit for quick review\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBElemParser\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLoadCSV\fP (\fBstd::string\fP \fBfile\fP, bool fatal=false)"
.br
.ti -1c
.RI "size_t \fBColSize\fP ()"
.br
.ti -1c
.RI "template<typename T , typename MapPolicy > void \fBGetMatrixSize\fP (size_t &rows, size_t &cols, \fBDatasetMapper\fP< MapPolicy > &info)"
.br
.RI "\fIPeek at the file to determine the number of rows and columns in the matrix, assuming a non-transposed matrix\&. \fP"
.ti -1c
.RI "template<typename T , typename MapPolicy > void \fBGetTransposeMatrixSize\fP (size_t &rows, size_t &cols, \fBDatasetMapper\fP< MapPolicy > &info)"
.br
.ti -1c
.RI "template<typename T , typename PolicyType > void \fBLoad\fP (arma::Mat< T > &inout, \fBDatasetMapper\fP< PolicyType > &infoSet, bool transpose=true)"
.br
.ti -1c
.RI "size_t \fBRowSize\fP ()"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "using \fBiter_type\fP = boost::iterator_range< std::string::iterator >"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "bool \fBCanOpen\fP ()"
.br
.ti -1c
.RI "boost::spirit::qi::rule< std::string::iterator, \fBiter_type\fP(), boost::spirit::ascii::space_type > \fBCreateCharRule\fP () const "
.br
.ti -1c
.RI "template<typename T > boost::spirit::qi::rule< std::string::iterator, T(), boost::spirit::ascii::space_type > \fBCreateNumRule\fP () const "
.br
.ti -1c
.RI "template<typename T , typename PolicyType > void \fBNonTranposeParse\fP (arma::Mat< T > &inout, \fBDatasetMapper\fP< PolicyType > &infoSet)"
.br
.ti -1c
.RI "template<typename T , typename PolicyType > void \fBTranposeParse\fP (arma::Mat< T > &inout, \fBDatasetMapper\fP< PolicyType > &infoSet)"
.br
.ti -1c
.RI "template<typename T , typename PolicyType > bool \fBTranposeParseImpl\fP (arma::Mat< T > &inout, \fBDatasetMapper\fP< PolicyType > &infoSet)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBstd::string\fP \fBextension\fP"
.br
.ti -1c
.RI "bool \fBfatalIfOpenFail\fP"
.br
.ti -1c
.RI "\fBstd::string\fP \fBfileName\fP"
.br
.ti -1c
.RI "std::ifstream \fBinFile\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Load the csv file\&.This class use boost::spirit to implement the parser, please refer to following link http://theboostcpplibraries.com/boost.spirit for quick review\&. 
.PP
Definition at line 36 of file load_csv\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "using \fBmlpack::data::LoadCSV::iter_type\fP =  boost::iterator_range<std::string::iterator>\fC [private]\fP"

.PP
Definition at line 186 of file load_csv\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::data::LoadCSV::LoadCSV (\fBstd::string\fP file, bool fatal = \fCfalse\fP)\fC [explicit]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool mlpack::data::LoadCSV::CanOpen ()\fC [private]\fP"

.PP
Referenced by Load(), and mlpack::data::LoadCSV::ElemParser::Parser()\&.
.SS "size_t mlpack::data::LoadCSV::ColSize ()"

.PP
Referenced by Load()\&.
.SS "boost::spirit::qi::rule<std::string::iterator, \fBiter_type\fP(), boost::spirit::ascii::space_type> mlpack::data::LoadCSV::CreateCharRule () const\fC [private]\fP"

.PP
Referenced by CreateNumRule(), GetMatrixSize(), GetTransposeMatrixSize(), NonTranposeParse(), and TranposeParseImpl()\&.
.SS "template<typename T > boost::spirit::qi::rule<std::string::iterator, T(), boost::spirit::ascii::space_type> mlpack::data::LoadCSV::CreateNumRule () const\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 318 of file load_csv\&.hpp\&.
.PP
References CreateCharRule(), and extension\&.
.SS "template<typename T , typename MapPolicy > void mlpack::data::LoadCSV::GetMatrixSize (size_t & rows, size_t & cols, \fBDatasetMapper\fP< MapPolicy > & info)\fC [inline]\fP"

.PP
Peek at the file to determine the number of rows and columns in the matrix, assuming a non-transposed matrix\&. This will also take a first pass over the data for \fBDatasetMapper\fP, if MapPolicy::NeedsFirstPass is true\&. The info object will be re-initialized with the correct dimensionality\&.
.PP
\fBParameters:\fP
.RS 4
\fIrows\fP Variable to be filled with the number of rows\&. 
.br
\fIcols\fP Variable to be filled with the number of columns\&. 
.br
\fIinfo\fP \fBDatasetMapper\fP object to use for first pass\&. 
.RE
.PP

.PP
Definition at line 73 of file load_csv\&.hpp\&.
.PP
References CreateCharRule(), inFile, and string()\&.
.SS "template<typename T , typename MapPolicy > void mlpack::data::LoadCSV::GetTransposeMatrixSize (size_t & rows, size_t & cols, \fBDatasetMapper\fP< MapPolicy > & info)\fC [inline]\fP"

.PP
Definition at line 133 of file load_csv\&.hpp\&.
.PP
References CreateCharRule(), inFile, and string()\&.
.SS "template<typename T , typename PolicyType > void mlpack::data::LoadCSV::Load (arma::Mat< T > & inout, \fBDatasetMapper\fP< PolicyType > & infoSet, bool transpose = \fCtrue\fP)\fC [inline]\fP"

.PP
Definition at line 42 of file load_csv\&.hpp\&.
.PP
References CanOpen(), ColSize(), NonTranposeParse(), RowSize(), and TranposeParse()\&.
.SS "template<typename T , typename PolicyType > void mlpack::data::LoadCSV::NonTranposeParse (arma::Mat< T > & inout, \fBDatasetMapper\fP< PolicyType > & infoSet)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 212 of file load_csv\&.hpp\&.
.PP
References CreateCharRule(), inFile, and string()\&.
.PP
Referenced by Load()\&.
.SS "size_t mlpack::data::LoadCSV::RowSize ()"

.PP
Referenced by Load()\&.
.SS "template<typename T , typename PolicyType > void mlpack::data::LoadCSV::TranposeParse (arma::Mat< T > & inout, \fBDatasetMapper\fP< PolicyType > & infoSet)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 260 of file load_csv\&.hpp\&.
.PP
References TranposeParseImpl()\&.
.PP
Referenced by Load()\&.
.SS "template<typename T , typename PolicyType > bool mlpack::data::LoadCSV::TranposeParseImpl (arma::Mat< T > & inout, \fBDatasetMapper\fP< PolicyType > & infoSet)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 272 of file load_csv\&.hpp\&.
.PP
References CreateCharRule(), inFile, and string()\&.
.PP
Referenced by TranposeParse()\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBstd::string\fP mlpack::data::LoadCSV::extension\fC [private]\fP"

.PP
Definition at line 351 of file load_csv\&.hpp\&.
.PP
Referenced by CreateNumRule()\&.
.SS "bool mlpack::data::LoadCSV::fatalIfOpenFail\fC [private]\fP"

.PP
Definition at line 352 of file load_csv\&.hpp\&.
.SS "\fBstd::string\fP mlpack::data::LoadCSV::fileName\fC [private]\fP"

.PP
Definition at line 353 of file load_csv\&.hpp\&.
.SS "std::ifstream mlpack::data::LoadCSV::inFile\fC [private]\fP"

.PP
Definition at line 354 of file load_csv\&.hpp\&.
.PP
Referenced by GetMatrixSize(), GetTransposeMatrixSize(), NonTranposeParse(), and TranposeParseImpl()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
