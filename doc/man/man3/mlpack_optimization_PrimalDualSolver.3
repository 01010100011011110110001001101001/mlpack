.TH "mlpack::optimization::PrimalDualSolver< SDPType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::optimization::PrimalDualSolver< SDPType > \- Interface to a primal dual interior point solver\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPrimalDualSolver\fP (const SDPType &\fBsdp\fP)"
.br
.RI "\fIConstruct a new solver instance from a given \fBSDP\fP instance\&. \fP"
.ti -1c
.RI "\fBPrimalDualSolver\fP (const SDPType &\fBsdp\fP, const arma::mat &\fBinitialX\fP, const arma::vec &initialYSparse, const arma::vec &initialYDense, const arma::mat &\fBinitialZ\fP)"
.br
.RI "\fIConstruct a new solver instance from a given \fBSDP\fP instance\&. \fP"
.ti -1c
.RI "double & \fBDualInfeasTol\fP ()"
.br
.RI "\fIModify the dual infeasibility tolerance\&. \fP"
.ti -1c
.RI "size_t & \fBMaxIterations\fP ()"
.br
.RI "\fIModify the maximum number of iterations to run before converging\&. \fP"
.ti -1c
.RI "double & \fBNormXzTol\fP ()"
.br
.RI "\fIModify the XZ tolerance\&. \fP"
.ti -1c
.RI "double \fBOptimize\fP (arma::mat &X, arma::vec &ySparse, arma::vec &yDense, arma::mat &Z)"
.br
.RI "\fIInvoke the optimization procedure, returning the converged values for the primal and dual variables\&. \fP"
.ti -1c
.RI "double \fBOptimize\fP (arma::mat &X)"
.br
.RI "\fIInvoke the optimization procedure, and only return the primal variable\&. \fP"
.ti -1c
.RI "double & \fBPrimalInfeasTol\fP ()"
.br
.RI "\fIModify the primal infeasibility tolerance\&. \fP"
.ti -1c
.RI "const SDPType & \fBSDP\fP () const "
.br
.RI "\fIReturn the underlying \fBSDP\fP instance\&. \fP"
.ti -1c
.RI "double & \fBTau\fP ()"
.br
.RI "\fIModify tau\&. Typical values are 0\&.99\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "double \fBdualInfeasTol\fP"
.br
.RI "\fIThe tolerance required on the dual constraint required before terminating\&. \fP"
.ti -1c
.RI "arma::mat \fBinitialX\fP"
.br
.RI "\fIStarting point for X\&. Needs to be positive definite\&. \fP"
.ti -1c
.RI "arma::vec \fBinitialYdense\fP"
.br
.RI "\fIStarting lagrange multiplier for the sparse constraints\&. \fP"
.ti -1c
.RI "arma::vec \fBinitialYsparse\fP"
.br
.RI "\fIStarting lagrange multiplier for the sparse constraints\&. \fP"
.ti -1c
.RI "arma::mat \fBinitialZ\fP"
.br
.RI "\fIStarting point for Z, the complementary slack variable\&. Needs to be\&. \fP"
.ti -1c
.RI "size_t \fBmaxIterations\fP"
.br
.RI "\fIMaximum number of iterations to run\&. Set to 0 for no limit\&. \fP"
.ti -1c
.RI "double \fBnormXzTol\fP"
.br
.RI "\fIThe tolerance on the norm of XZ required before terminating\&. \fP"
.ti -1c
.RI "double \fBprimalInfeasTol\fP"
.br
.RI "\fIThe tolerance required on the primal constraints required before terminating\&. \fP"
.ti -1c
.RI "SDPType \fBsdp\fP"
.br
.RI "\fIThe \fBSDP\fP problem instance to optimize\&. \fP"
.ti -1c
.RI "double \fBtau\fP"
.br
.RI "\fIThe step size modulating factor\&. Needs to be a scalar in (0, 1)\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename SDPType>
.br
class mlpack::optimization::PrimalDualSolver< SDPType >"
Interface to a primal dual interior point solver\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fISDPType\fP 
.RE
.PP

.PP
Definition at line 26 of file primal_dual\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename SDPType > \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::\fBPrimalDualSolver\fP (const SDPType & sdp)"

.PP
Construct a new solver instance from a given \fBSDP\fP instance\&. Uses a random, positive initialization point\&.
.PP
\fBParameters:\fP
.RS 4
\fIsdp\fP Initialized \fBSDP\fP to be solved\&. 
.RE
.PP

.SS "template<typename SDPType > \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::\fBPrimalDualSolver\fP (const SDPType & sdp, const arma::mat & initialX, const arma::vec & initialYSparse, const arma::vec & initialYDense, const arma::mat & initialZ)"

.PP
Construct a new solver instance from a given \fBSDP\fP instance\&. Uses a random, positive initialization point\&. Both initialX and initialZ need to be positive definite matrices\&.
.PP
\fBParameters:\fP
.RS 4
\fIsdp\fP Initialized \fBSDP\fP to be solved\&. 
.br
\fIinitialX\fP 
.br
\fIinitialYSparse\fP 
.br
\fIinitialYDense\fP 
.br
\fIinitialZ\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename SDPType > double& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::DualInfeasTol ()\fC [inline]\fP"

.PP
Modify the dual infeasibility tolerance\&. 
.PP
Definition at line 93 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::dualInfeasTol\&.
.SS "template<typename SDPType > size_t& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::MaxIterations ()\fC [inline]\fP"

.PP
Modify the maximum number of iterations to run before converging\&. 
.PP
Definition at line 96 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::maxIterations\&.
.SS "template<typename SDPType > double& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::NormXzTol ()\fC [inline]\fP"

.PP
Modify the XZ tolerance\&. 
.PP
Definition at line 87 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::normXzTol\&.
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::Optimize (arma::mat & X, arma::vec & ySparse, arma::vec & yDense, arma::mat & Z)"

.PP
Invoke the optimization procedure, returning the converged values for the primal and dual variables\&. 
.PP
\fBParameters:\fP
.RS 4
\fIX\fP 
.br
\fIySparse\fP 
.br
\fIyDense\fP 
.br
\fIZ\fP 
.RE
.PP

.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::Optimize()\&.
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::Optimize (arma::mat & X)\fC [inline]\fP"

.PP
Invoke the optimization procedure, and only return the primal variable\&. 
.PP
\fBParameters:\fP
.RS 4
\fIX\fP 
.RE
.PP

.PP
Definition at line 73 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::Optimize()\&.
.SS "template<typename SDPType > double& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::PrimalInfeasTol ()\fC [inline]\fP"

.PP
Modify the primal infeasibility tolerance\&. 
.PP
Definition at line 90 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::primalInfeasTol\&.
.SS "template<typename SDPType > const SDPType& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::\fBSDP\fP () const\fC [inline]\fP"

.PP
Return the underlying \fBSDP\fP instance\&. 
.PP
Definition at line 81 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::sdp\&.
.SS "template<typename SDPType > double& \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::Tau ()\fC [inline]\fP"

.PP
Modify tau\&. Typical values are 0\&.99\&. 
.PP
Definition at line 84 of file primal_dual\&.hpp\&.
.PP
References mlpack::optimization::PrimalDualSolver< SDPType >::tau\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::dualInfeasTol\fC [private]\fP"

.PP
The tolerance required on the dual constraint required before terminating\&. 
.PP
Definition at line 126 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::DualInfeasTol()\&.
.SS "template<typename SDPType > arma::mat \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::initialX\fC [private]\fP"

.PP
Starting point for X\&. Needs to be positive definite\&. 
.PP
Definition at line 103 of file primal_dual\&.hpp\&.
.SS "template<typename SDPType > arma::vec \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::initialYdense\fC [private]\fP"

.PP
Starting lagrange multiplier for the sparse constraints\&. 
.PP
Definition at line 109 of file primal_dual\&.hpp\&.
.SS "template<typename SDPType > arma::vec \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::initialYsparse\fC [private]\fP"

.PP
Starting lagrange multiplier for the sparse constraints\&. 
.PP
Definition at line 106 of file primal_dual\&.hpp\&.
.SS "template<typename SDPType > arma::mat \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::initialZ\fC [private]\fP"

.PP
Starting point for Z, the complementary slack variable\&. Needs to be\&. 
.PP
Definition at line 113 of file primal_dual\&.hpp\&.
.SS "template<typename SDPType > size_t \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::maxIterations\fC [private]\fP"

.PP
Maximum number of iterations to run\&. Set to 0 for no limit\&. 
.PP
Definition at line 129 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::MaxIterations()\&.
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::normXzTol\fC [private]\fP"

.PP
The tolerance on the norm of XZ required before terminating\&. 
.PP
Definition at line 119 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::NormXzTol()\&.
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::primalInfeasTol\fC [private]\fP"

.PP
The tolerance required on the primal constraints required before terminating\&. 
.PP
Definition at line 123 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::PrimalInfeasTol()\&.
.SS "template<typename SDPType > SDPType \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::sdp\fC [private]\fP"

.PP
The \fBSDP\fP problem instance to optimize\&. 
.PP
Definition at line 100 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::SDP()\&.
.SS "template<typename SDPType > double \fBmlpack::optimization::PrimalDualSolver\fP< SDPType >::tau\fC [private]\fP"

.PP
The step size modulating factor\&. Needs to be a scalar in (0, 1)\&. 
.PP
Definition at line 116 of file primal_dual\&.hpp\&.
.PP
Referenced by mlpack::optimization::PrimalDualSolver< SDPType >::Tau()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
