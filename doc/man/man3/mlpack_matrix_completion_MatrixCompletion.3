.TH "mlpack::matrix_completion::MatrixCompletion" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::matrix_completion::MatrixCompletion \- This class implements the popular nuclear norm minimization heuristic for matrix completion problems\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t \fBm\fP, const size_t \fBn\fP, const arma::umat &\fBindices\fP, const arma::vec &\fBvalues\fP, const size_t r)"
.br
.RI "\fIConstruct a matrix completion problem, specifying the maximum rank of the solution\&. \fP"
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t \fBm\fP, const size_t \fBn\fP, const arma::umat &\fBindices\fP, const arma::vec &\fBvalues\fP, const arma::mat &initialPoint)"
.br
.RI "\fIConstruct a matrix completion problem, specifying the initial point of the optimization\&. \fP"
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t \fBm\fP, const size_t \fBn\fP, const arma::umat &\fBindices\fP, const arma::vec &\fBvalues\fP)"
.br
.RI "\fIConstruct a matrix completion problem\&. \fP"
.ti -1c
.RI "void \fBRecover\fP (arma::mat &recovered)"
.br
.RI "\fISolve the underlying SDP to fill in the remaining values\&. \fP"
.ti -1c
.RI "const \fBoptimization::LRSDP\fP< \fBoptimization::SDP\fP< arma::sp_mat > > & \fBSdp\fP () const "
.br
.RI "\fIReturn the underlying SDP\&. \fP"
.ti -1c
.RI "\fBoptimization::LRSDP\fP< \fBoptimization::SDP\fP< arma::sp_mat > > & \fBSdp\fP ()"
.br
.RI "\fIModify the underlying SDP\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBCheckValues\fP ()"
.br
.RI "\fIValidate the input matrices\&. \fP"
.ti -1c
.RI "void \fBInitSDP\fP ()"
.br
.RI "\fIInitialize the SDP\&. \fP"
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static size_t \fBDefaultRank\fP (const size_t \fBm\fP, const size_t \fBn\fP, const size_t p)"
.br
.RI "\fISelect a rank of the matrix given that is of size m x n and has p known elements\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "arma::umat \fBindices\fP"
.br
.RI "\fIMatrix containing the indices of the known entries (has two rows)\&. \fP"
.ti -1c
.RI "size_t \fBm\fP"
.br
.RI "\fINumber of rows in original matrix\&. \fP"
.ti -1c
.RI "size_t \fBn\fP"
.br
.RI "\fINumber of columns in original matrix\&. \fP"
.ti -1c
.RI "\fBoptimization::LRSDP\fP< \fBoptimization::SDP\fP< arma::sp_mat > > \fBsdp\fP"
.br
.RI "\fIThe underlying SDP to be solved\&. \fP"
.ti -1c
.RI "arma::mat \fBvalues\fP"
.br
.RI "\fIVector containing the values of the known entries\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class implements the popular nuclear norm minimization heuristic for matrix completion problems\&. 

That is, given known values M_ij's, the following optimization problem (semi-definite program) is solved to fill in the remaining unknown values of X
.PP
min ||X||_* subj to X_ij = M_ij
.PP
where ||X||_* denotes the nuclear norm (sum of singular values of X)\&.
.PP
For a theoretical treatment of the conditions necessary for exact recovery, see the following paper:
.PP
A Simpler Appoarch to Matrix Completion\&. Benjamin Recht\&. JMLR 11\&. http://arxiv.org/pdf/0910.0651v2.pdf
.PP
An example of how to use this class is shown below:
.PP
.PP
.nf
size_t m, n;         // size of unknown matrix
arma::umat indices;  // contains the known indices [2 x n_entries]
arma::vec values;    // contains the known values [n_entries]
arma::mat recovered; // will contain the completed matrix

MatrixCompletion mc(m, n, indices, values);
mc\&.Recover(recovered);
.fi
.PP
.PP
\fBSee also:\fP
.RS 4
LRSDP 
.RE
.PP

.PP
Definition at line 53 of file matrix_completion\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::matrix_completion::MatrixCompletion::MatrixCompletion (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values, const size_t r)"

.PP
Construct a matrix completion problem, specifying the maximum rank of the solution\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.br
\fIr\fP Maximum rank of solution\&. 
.RE
.PP

.SS "mlpack::matrix_completion::MatrixCompletion::MatrixCompletion (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values, const arma::mat & initialPoint)"

.PP
Construct a matrix completion problem, specifying the initial point of the optimization\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.br
\fIinitialPoint\fP Starting point for the SDP optimization\&. 
.RE
.PP

.SS "mlpack::matrix_completion::MatrixCompletion::MatrixCompletion (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values)"

.PP
Construct a matrix completion problem\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void mlpack::matrix_completion::MatrixCompletion::CheckValues ()\fC [private]\fP"

.PP
Validate the input matrices\&. 
.SS "static size_t mlpack::matrix_completion::MatrixCompletion::DefaultRank (const size_t m, const size_t n, const size_t p)\fC [static]\fP, \fC [private]\fP"

.PP
Select a rank of the matrix given that is of size m x n and has p known elements\&. 
.SS "void mlpack::matrix_completion::MatrixCompletion::InitSDP ()\fC [private]\fP"

.PP
Initialize the SDP\&. 
.SS "void mlpack::matrix_completion::MatrixCompletion::Recover (arma::mat & recovered)"

.PP
Solve the underlying SDP to fill in the remaining values\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrecovered\fP Will contain the completed matrix\&. 
.RE
.PP

.SS "const \fBoptimization::LRSDP\fP<\fBoptimization::SDP\fP<arma::sp_mat> >& mlpack::matrix_completion::MatrixCompletion::Sdp () const\fC [inline]\fP"

.PP
Return the underlying SDP\&. 
.PP
Definition at line 115 of file matrix_completion\&.hpp\&.
.PP
References sdp\&.
.SS "\fBoptimization::LRSDP\fP<\fBoptimization::SDP\fP<arma::sp_mat> >& mlpack::matrix_completion::MatrixCompletion::Sdp ()\fC [inline]\fP"

.PP
Modify the underlying SDP\&. 
.PP
Definition at line 117 of file matrix_completion\&.hpp\&.
.PP
References sdp\&.
.SH "Member Data Documentation"
.PP 
.SS "arma::umat mlpack::matrix_completion::MatrixCompletion::indices\fC [private]\fP"

.PP
Matrix containing the indices of the known entries (has two rows)\&. 
.PP
Definition at line 125 of file matrix_completion\&.hpp\&.
.SS "size_t mlpack::matrix_completion::MatrixCompletion::m\fC [private]\fP"

.PP
Number of rows in original matrix\&. 
.PP
Definition at line 121 of file matrix_completion\&.hpp\&.
.SS "size_t mlpack::matrix_completion::MatrixCompletion::n\fC [private]\fP"

.PP
Number of columns in original matrix\&. 
.PP
Definition at line 123 of file matrix_completion\&.hpp\&.
.SS "\fBoptimization::LRSDP\fP<\fBoptimization::SDP\fP<arma::sp_mat> > mlpack::matrix_completion::MatrixCompletion::sdp\fC [private]\fP"

.PP
The underlying SDP to be solved\&. 
.PP
Definition at line 130 of file matrix_completion\&.hpp\&.
.PP
Referenced by Sdp()\&.
.SS "arma::mat mlpack::matrix_completion::MatrixCompletion::values\fC [private]\fP"

.PP
Vector containing the values of the known entries\&. 
.PP
Definition at line 127 of file matrix_completion\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
