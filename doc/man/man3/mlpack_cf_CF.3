.TH "mlpack::cf::CF" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::cf::CF \- This class implements Collaborative Filtering (\fBCF\fP)\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBCandidateCmp\fP"
.br
.RI "\fICompare two candidates based on the value\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCF\fP (const size_t \fBnumUsersForSimilarity\fP=5, const size_t \fBrank\fP=0)"
.br
.RI "\fIInitialize the \fBCF\fP object without performing any factorization\&. \fP"
.ti -1c
.RI "template<typename FactorizerType  = amf::NMFALSFactorizer> \fBCF\fP (const arma::mat &data, FactorizerType factorizer=FactorizerType(), const size_t \fBnumUsersForSimilarity\fP=5, const size_t \fBrank\fP=0)"
.br
.RI "\fIInitialize the \fBCF\fP object using an instantiated factorizer, immediately factorizing the given data to create a model\&. \fP"
.ti -1c
.RI "template<typename FactorizerType  = amf::NMFALSFactorizer> \fBCF\fP (const arma::sp_mat &data, FactorizerType factorizer=FactorizerType(), const size_t \fBnumUsersForSimilarity\fP=5, const size_t \fBrank\fP=0, const typename \fBstd::enable_if_t\fP< !\fBFactorizerTraits\fP< FactorizerType >::UsesCoordinateList > *=0)"
.br
.RI "\fIInitialize the \fBCF\fP object using an instantiated factorizer, immediately factorizing the given data to create a model\&. \fP"
.ti -1c
.RI "const arma::sp_mat & \fBCleanedData\fP () const "
.br
.RI "\fIGet the cleaned data matrix\&. \fP"
.ti -1c
.RI "void \fBGetRecommendations\fP (const size_t numRecs, arma::Mat< size_t > &recommendations)"
.br
.RI "\fIGenerates the given number of recommendations for all users\&. \fP"
.ti -1c
.RI "void \fBGetRecommendations\fP (const size_t numRecs, arma::Mat< size_t > &recommendations, const arma::Col< size_t > &users)"
.br
.RI "\fIGenerates the given number of recommendations for the specified users\&. \fP"
.ti -1c
.RI "const arma::mat & \fBH\fP () const "
.br
.RI "\fIGet the Item Matrix\&. \fP"
.ti -1c
.RI "void \fBNumUsersForSimilarity\fP (const size_t num)"
.br
.RI "\fISets number of users for calculating similarity\&. \fP"
.ti -1c
.RI "size_t \fBNumUsersForSimilarity\fP () const "
.br
.RI "\fIGets number of users for calculating similarity\&. \fP"
.ti -1c
.RI "double \fBPredict\fP (const size_t user, const size_t item) const "
.br
.RI "\fIPredict the rating of an item by a particular user\&. \fP"
.ti -1c
.RI "void \fBPredict\fP (const arma::Mat< size_t > &combinations, arma::vec &predictions) const "
.br
.RI "\fIPredict ratings for each user-item combination in the given coordinate list matrix\&. \fP"
.ti -1c
.RI "void \fBRank\fP (const size_t rankValue)"
.br
.RI "\fISets rank parameter for matrix factorization\&. \fP"
.ti -1c
.RI "size_t \fBRank\fP () const "
.br
.RI "\fIGets rank parameter for matrix factorization\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &ar, const unsigned int)"
.br
.RI "\fISerialize the \fBCF\fP model to the given archive\&. \fP"
.ti -1c
.RI "template<typename FactorizerType  = amf::NMFALSFactorizer> void \fBTrain\fP (const arma::mat &data, FactorizerType factorizer=FactorizerType())"
.br
.RI "\fITrain the \fBCF\fP model (i\&.e\&. \fP"
.ti -1c
.RI "template<typename FactorizerType  = amf::NMFALSFactorizer> void \fBTrain\fP (const arma::sp_mat &data, FactorizerType factorizer=FactorizerType(), const typename \fBstd::enable_if_t\fP< !\fBFactorizerTraits\fP< FactorizerType >::UsesCoordinateList > *=0)"
.br
.RI "\fITrain the \fBCF\fP model (i\&.e\&. \fP"
.ti -1c
.RI "const arma::mat & \fBW\fP () const "
.br
.RI "\fIGet the User Matrix\&. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBCleanData\fP (const arma::mat &data, arma::sp_mat &\fBcleanedData\fP)"
.br
.RI "\fIConverts the User, Item, Value Matrix to User-Item Table\&. \fP"
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "typedef std::pair< double, size_t > \fBCandidate\fP"
.br
.RI "\fICandidate represents a possible recommendation (value, item)\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "arma::sp_mat \fBcleanedData\fP"
.br
.RI "\fICleaned data matrix\&. \fP"
.ti -1c
.RI "arma::mat \fBh\fP"
.br
.RI "\fIItem matrix\&. \fP"
.ti -1c
.RI "size_t \fBnumUsersForSimilarity\fP"
.br
.RI "\fINumber of users for similarity\&. \fP"
.ti -1c
.RI "size_t \fBrank\fP"
.br
.RI "\fIRank used for matrix factorization\&. \fP"
.ti -1c
.RI "arma::mat \fBw\fP"
.br
.RI "\fIUser matrix\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class implements Collaborative Filtering (\fBCF\fP)\&. 

This implementation presently supports Alternating Least Squares (ALS) for collaborative filtering\&.
.PP
A simple example of how to run Collaborative Filtering is shown below\&.
.PP
.PP
.nf
extern arma::mat data; // (user, item, rating) table
extern arma::Col<size_t> users; // users seeking recommendations
arma::Mat<size_t> recommendations; // Recommendations

CF cf(data); // Default options\&.

// Generate 10 recommendations for all users\&.
cf\&.GetRecommendations(10, recommendations);

// Generate 10 recommendations for specified users\&.
cf\&.GetRecommendations(10, recommendations, users);
.fi
.PP
.PP
The data matrix is a (user, item, rating) table\&. Each column in the matrix should have three rows\&. The first represents the user; the second represents the item; and the third represents the rating\&. The user and item, while they are in a matrix that holds doubles, should hold integer (or size_t) values\&. The user and item indices are assumed to start at 0\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIFactorizerType\fP The type of matrix factorization to use to decompose the rating matrix (a W and H matrix)\&. This must implement the method Apply(arma::sp_mat& data, size_t rank, arma::mat& W, arma::mat& H)\&. 
.RE
.PP

.PP
Definition at line 80 of file cf\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::pair<double, size_t> \fBmlpack::cf::CF::Candidate\fP\fC [private]\fP"

.PP
Candidate represents a possible recommendation (value, item)\&. 
.PP
Definition at line 266 of file cf\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mlpack::cf::CF::CF (const size_t numUsersForSimilarity = \fC5\fP, const size_t rank = \fC0\fP)"

.PP
Initialize the \fBCF\fP object without performing any factorization\&. Be sure to call \fBTrain()\fP before calling \fBGetRecommendations()\fP or any other functions! 
.SS "template<typename FactorizerType  = amf::NMFALSFactorizer> mlpack::cf::CF::CF (const arma::mat & data, FactorizerType factorizer = \fCFactorizerType()\fP, const size_t numUsersForSimilarity = \fC5\fP, const size_t rank = \fC0\fP)"

.PP
Initialize the \fBCF\fP object using an instantiated factorizer, immediately factorizing the given data to create a model\&. There are parameters that can be set; default values are provided for each of them\&. If the rank is left unset (or is set to 0), a simple density-based heuristic will be used to choose a rank\&.
.PP
The provided dataset should be a coordinate list; that is, a 3-row matrix where each column corresponds to a (user, item, rating) entry in the matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Data matrix: coordinate list or dense matrix\&. 
.br
\fIfactorizer\fP Instantiated factorizer object\&. 
.br
\fInumUsersForSimilarity\fP Size of the neighborhood\&. 
.br
\fIrank\fP Rank parameter for matrix factorization\&. 
.RE
.PP

.SS "template<typename FactorizerType  = amf::NMFALSFactorizer> mlpack::cf::CF::CF (const arma::sp_mat & data, FactorizerType factorizer = \fCFactorizerType()\fP, const size_t numUsersForSimilarity = \fC5\fP, const size_t rank = \fC0\fP, const typename \fBstd::enable_if_t\fP< !\fBFactorizerTraits\fP< FactorizerType >::UsesCoordinateList > * = \fC0\fP)"

.PP
Initialize the \fBCF\fP object using an instantiated factorizer, immediately factorizing the given data to create a model\&. There are parameters that can be set; default values are provided for each of them\&. If the rank is left unset (or is set to 0), a simple density-based heuristic will be used to choose a rank\&. Data will be considered in the format of items vs\&. users and will be passed directly to the factorizer without cleaning\&. This overload of the constructor will only be available if the factorizer does not use a coordinate list (i\&.e\&. if UsesCoordinateList is false)\&.
.PP
The U and T template parameters are for SFINAE, so that this overload is only available when the FactorizerType uses a coordinate list\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Sparse matrix data\&. 
.br
\fIfactorizer\fP Instantiated factorizer object\&. 
.br
\fInumUsersForSimilarity\fP Size of the neighborhood\&. 
.br
\fIrank\fP Rank parameter for matrix factorization\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "static void mlpack::cf::CF::CleanData (const arma::mat & data, arma::sp_mat & cleanedData)\fC [static]\fP"

.PP
Converts the User, Item, Value Matrix to User-Item Table\&. 
.SS "const arma::sp_mat& mlpack::cf::CF::CleanedData () const\fC [inline]\fP"

.PP
Get the cleaned data matrix\&. 
.PP
Definition at line 199 of file cf\&.hpp\&.
.SS "void mlpack::cf::CF::GetRecommendations (const size_t numRecs, arma::Mat< size_t > & recommendations)"

.PP
Generates the given number of recommendations for all users\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumRecs\fP Number of Recommendations 
.br
\fIrecommendations\fP Matrix to save recommendations into\&. 
.RE
.PP

.SS "void mlpack::cf::CF::GetRecommendations (const size_t numRecs, arma::Mat< size_t > & recommendations, const arma::Col< size_t > & users)"

.PP
Generates the given number of recommendations for the specified users\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumRecs\fP Number of Recommendations 
.br
\fIrecommendations\fP Matrix to save recommendations 
.br
\fIusers\fP Users for which recommendations are to be generated 
.RE
.PP

.SS "const arma::mat& mlpack::cf::CF::H () const\fC [inline]\fP"

.PP
Get the Item Matrix\&. 
.PP
Definition at line 197 of file cf\&.hpp\&.
.SS "void mlpack::cf::CF::NumUsersForSimilarity (const size_t num)\fC [inline]\fP"

.PP
Sets number of users for calculating similarity\&. 
.PP
Definition at line 165 of file cf\&.hpp\&.
.PP
References mlpack::Log::Warn\&.
.SS "size_t mlpack::cf::CF::NumUsersForSimilarity () const\fC [inline]\fP"

.PP
Gets number of users for calculating similarity\&. 
.PP
Definition at line 177 of file cf\&.hpp\&.
.SS "double mlpack::cf::CF::Predict (const size_t user, const size_t item) const"

.PP
Predict the rating of an item by a particular user\&. 
.PP
\fBParameters:\fP
.RS 4
\fIuser\fP User to predict for\&. 
.br
\fIitem\fP Item to predict for\&. 
.RE
.PP

.SS "void mlpack::cf::CF::Predict (const arma::Mat< size_t > & combinations, arma::vec & predictions) const"

.PP
Predict ratings for each user-item combination in the given coordinate list matrix\&. The matrix 'combinations' should have two rows and number of columns equal to the number of desired predictions\&. The first element of each column corresponds to the user index, and the second element of each column corresponds to the item index\&. The output vector 'predictions' will have length equal to combinations\&.n_cols, and predictions[i] will be equal to the prediction for the user/item combination in combinations\&.col(i)\&.
.PP
\fBParameters:\fP
.RS 4
\fIcombinations\fP User/item combinations to predict\&. 
.br
\fIpredictions\fP Predicted ratings for each user/item combination\&. 
.RE
.PP

.SS "void mlpack::cf::CF::Rank (const size_t rankValue)\fC [inline]\fP"

.PP
Sets rank parameter for matrix factorization\&. 
.PP
Definition at line 183 of file cf\&.hpp\&.
.SS "size_t mlpack::cf::CF::Rank () const\fC [inline]\fP"

.PP
Gets rank parameter for matrix factorization\&. 
.PP
Definition at line 189 of file cf\&.hpp\&.
.SS "template<typename Archive > void mlpack::cf::CF::Serialize (Archive & ar, const unsigned int)"

.PP
Serialize the \fBCF\fP model to the given archive\&. 
.SS "template<typename FactorizerType  = amf::NMFALSFactorizer> void mlpack::cf::CF::Train (const arma::mat & data, FactorizerType factorizer = \fCFactorizerType()\fP)"

.PP
Train the \fBCF\fP model (i\&.e\&. factorize the input matrix) using the parameters that have already been set for the model (specifically, the rank parameter), and optionally, using the given FactorizerType\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Input dataset; coordinate list or dense matrix\&. 
.br
\fIfactorizer\fP Instantiated factorizer\&. 
.RE
.PP

.SS "template<typename FactorizerType  = amf::NMFALSFactorizer> void mlpack::cf::CF::Train (const arma::sp_mat & data, FactorizerType factorizer = \fCFactorizerType()\fP, const typename \fBstd::enable_if_t\fP< !\fBFactorizerTraits\fP< FactorizerType >::UsesCoordinateList > * = \fC0\fP)"

.PP
Train the \fBCF\fP model (i\&.e\&. factorize the input matrix) using the parameters that have already been set for the model (specifically, the rank parameter), and optionally, using the given FactorizerType\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Sparse matrix data\&. 
.br
\fIfactorizer\fP Instantiated factorizer\&. 
.RE
.PP

.SS "const arma::mat& mlpack::cf::CF::W () const\fC [inline]\fP"

.PP
Get the User Matrix\&. 
.PP
Definition at line 195 of file cf\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "arma::sp_mat mlpack::cf::CF::cleanedData\fC [private]\fP"

.PP
Cleaned data matrix\&. 
.PP
Definition at line 263 of file cf\&.hpp\&.
.SS "arma::mat mlpack::cf::CF::h\fC [private]\fP"

.PP
Item matrix\&. 
.PP
Definition at line 261 of file cf\&.hpp\&.
.SS "size_t mlpack::cf::CF::numUsersForSimilarity\fC [private]\fP"

.PP
Number of users for similarity\&. 
.PP
Definition at line 255 of file cf\&.hpp\&.
.SS "size_t mlpack::cf::CF::rank\fC [private]\fP"

.PP
Rank used for matrix factorization\&. 
.PP
Definition at line 257 of file cf\&.hpp\&.
.SS "arma::mat mlpack::cf::CF::w\fC [private]\fP"

.PP
User matrix\&. 
.PP
Definition at line 259 of file cf\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
