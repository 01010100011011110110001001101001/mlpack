.TH "mlpack::ann::Glimpse< InputDataType, OutputDataType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::ann::Glimpse< InputDataType, OutputDataType > \- The glimpse layer returns a retina-like representation (down-scaled cropped images) of increasing scale around a given location in a given image\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGlimpse\fP (const size_t \fBinSize\fP, const size_t \fBsize\fP, const size_t \fBdepth\fP=3, const size_t \fBscale\fP=2, const size_t \fBinputWidth\fP=0, const size_t \fBinputHeight\fP=0)"
.br
.RI "\fICreate the GlimpseLayer object using the specified ratio and rescale parameter\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &&, arma::Mat< eT > &&gy, arma::Mat< eT > &&g)"
.br
.RI "\fIOrdinary feed backward pass of the glimpse layer\&. \fP"
.ti -1c
.RI "OutputDataType & \fBDelta\fP () const "
.br
.RI "\fIGet the detla\&. \fP"
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "\fIModify the delta\&. \fP"
.ti -1c
.RI "bool \fBDeterministic\fP () const "
.br
.RI "\fIGet the value of the deterministic parameter\&. \fP"
.ti -1c
.RI "bool & \fBDeterministic\fP ()"
.br
.RI "\fIModify the value of the deterministic parameter\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBForward\fP (const arma::Mat< eT > &&input, arma::Mat< eT > &&output)"
.br
.RI "\fIOrdinary feed forward pass of the glimpse layer\&. \fP"
.ti -1c
.RI "size_t const & \fBInputHeight\fP () const "
.br
.RI "\fIGet the input height\&. \fP"
.ti -1c
.RI "size_t & \fBInputHeight\fP ()"
.br
.RI "\fIModify the input height\&. \fP"
.ti -1c
.RI "InputDataType & \fBInputParameter\fP () const "
.br
.RI "\fIGet the input parameter\&. \fP"
.ti -1c
.RI "InputDataType & \fBInputParameter\fP ()"
.br
.RI "\fIModify the input parameter\&. \fP"
.ti -1c
.RI "size_t const & \fBInputWidth\fP () const "
.br
.RI "\fIGet the input width\&. \fP"
.ti -1c
.RI "size_t & \fBInputWidth\fP ()"
.br
.RI "\fIModify input the width\&. \fP"
.ti -1c
.RI "void \fBLocation\fP (const arma::mat &\fBlocation\fP)"
.br
.RI "\fISet the locationthe x and y coordinate of the center of the output glimpse\&. \fP"
.ti -1c
.RI "size_t const & \fBOutputHeight\fP () const "
.br
.RI "\fIGet the output height\&. \fP"
.ti -1c
.RI "size_t & \fBOutputHeight\fP ()"
.br
.RI "\fIModify the output height\&. \fP"
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const "
.br
.RI "\fIGet the output parameter\&. \fP"
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "\fIModify the output parameter\&. \fP"
.ti -1c
.RI "size_t const & \fBOutputWidth\fP () const "
.br
.RI "\fIGet the output width\&. \fP"
.ti -1c
.RI "size_t & \fBOutputWidth\fP ()"
.br
.RI "\fIModify the output width\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &ar, const unsigned int)"
.br
.RI "\fISerialize the layer\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "template<typename eT > void \fBDownwardReSampling\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &error, arma::Mat< eT > &output)"
.br
.RI "\fIApply DownwardReSampling to the input and store the results into the output parameter\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBPooling\fP (const size_t kSize, const arma::Mat< eT > &input, arma::Mat< eT > &output)"
.br
.RI "\fIApply pooling to the input and store the results to the output parameter\&. \fP"
.ti -1c
.RI "template<typename eT > void \fBReSampling\fP (const arma::Mat< eT > &input, arma::Mat< eT > &output)"
.br
.RI "\fIApply ReSampling to the input and store the results in the output parameter\&. \fP"
.ti -1c
.RI "void \fBTransform\fP (arma::mat &w)"
.br
.ti -1c
.RI "void \fBTransform\fP (arma::cube &w)"
.br
.ti -1c
.RI "template<typename eT > void \fBUnpooling\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &error, arma::Mat< eT > &output)"
.br
.RI "\fIApply unpooling to the input and store the results\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "OutputDataType \fBdelta\fP"
.br
.RI "\fILocally-stored delta object\&. \fP"
.ti -1c
.RI "size_t \fBdepth\fP"
.br
.RI "\fIThe number of patches to crop per glimpse\&. \fP"
.ti -1c
.RI "bool \fBdeterministic\fP"
.br
.RI "\fIIf true use maximum a posteriori during the forward pass\&. \fP"
.ti -1c
.RI "arma::cube \fBgTemp\fP"
.br
.RI "\fILocation-stored transformed gradient paramter\&. \fP"
.ti -1c
.RI "size_t \fBinputDepth\fP"
.br
.RI "\fILocally-stored depth of the input\&. \fP"
.ti -1c
.RI "size_t \fBinputHeight\fP"
.br
.RI "\fILocally-stored input height\&. \fP"
.ti -1c
.RI "InputDataType \fBinputParameter\fP"
.br
.RI "\fILocally-stored input parameter object\&. \fP"
.ti -1c
.RI "arma::cube \fBinputTemp\fP"
.br
.RI "\fILocally-stored transformed input parameter\&. \fP"
.ti -1c
.RI "size_t \fBinputWidth\fP"
.br
.RI "\fILocally-stored input width\&. \fP"
.ti -1c
.RI "size_t \fBinSize\fP"
.br
.RI "\fIThe size of the input units\&. \fP"
.ti -1c
.RI "arma::mat \fBlocation\fP"
.br
.RI "\fIThe x and y coordinate of the center of the output glimpse\&. \fP"
.ti -1c
.RI "std::vector< arma::mat > \fBlocationParameter\fP"
.br
.RI "\fILocation-stored module location parameter\&. \fP"
.ti -1c
.RI "size_t \fBoutputHeight\fP"
.br
.RI "\fILocally-stored output height\&. \fP"
.ti -1c
.RI "OutputDataType \fBoutputParameter\fP"
.br
.RI "\fILocally-stored output parameter object\&. \fP"
.ti -1c
.RI "arma::cube \fBoutputTemp\fP"
.br
.RI "\fILocally-stored transformed output parameter\&. \fP"
.ti -1c
.RI "size_t \fBoutputWidth\fP"
.br
.RI "\fILocally-stored output width\&. \fP"
.ti -1c
.RI "\fBMeanPoolingRule\fP \fBpooling\fP"
.br
.RI "\fILocally-stored object to perform the mean pooling operation\&. \fP"
.ti -1c
.RI "size_t \fBscale\fP"
.br
.RI "\fIThe scale fraction\&. \fP"
.ti -1c
.RI "size_t \fBsize\fP"
.br
.RI "\fIThe used glimpse size (height = width)\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::Glimpse< InputDataType, OutputDataType >"
The glimpse layer returns a retina-like representation (down-scaled cropped images) of increasing scale around a given location in a given image\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 82 of file glimpse\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::\fBGlimpse\fP (const size_t inSize, const size_t size, const size_t depth = \fC3\fP, const size_t scale = \fC2\fP, const size_t inputWidth = \fC0\fP, const size_t inputHeight = \fC0\fP)"

.PP
Create the GlimpseLayer object using the specified ratio and rescale parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinSize\fP The size of the input units\&. 
.br
\fIsize\fP The used glimpse size (height = width)\&. 
.br
\fIdepth\fP The number of patches to crop per glimpse\&. 
.br
\fIscale\fP The scaling factor used to create the increasing retina-like representation\&. 
.br
\fIinputWidth\fP The input width of the given input data\&. 
.br
\fIinputHeight\fP The input height of the given input data\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Backward (const arma::Mat< eT > &&, arma::Mat< eT > && gy, arma::Mat< eT > && g)"

.PP
Ordinary feed backward pass of the glimpse layer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fIgy\fP The backpropagated error\&. 
.br
\fIg\fP The calculated gradient\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Delta () const\fC [inline]\fP"

.PP
Get the detla\&. 
.PP
Definition at line 137 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 139 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Deterministic () const\fC [inline]\fP"

.PP
Get the value of the deterministic parameter\&. 
.PP
Definition at line 169 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Deterministic ()\fC [inline]\fP"

.PP
Modify the value of the deterministic parameter\&. 
.PP
Definition at line 171 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::DownwardReSampling (const arma::Mat< eT > & input, const arma::Mat< eT > & error, arma::Mat< eT > & output)\fC [inline]\fP, \fC [private]\fP"

.PP
Apply DownwardReSampling to the input and store the results into the output parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The input to be apply the DownwardReSampling rule\&. 
.br
\fIerror\fP The error used to perform the DownwardReSampling operation\&. 
.br
\fIoutput\fP The DownwardReSampled result\&. 
.RE
.PP

.PP
Definition at line 324 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Forward (const arma::Mat< eT > && input, arma::Mat< eT > && output)"

.PP
Ordinary feed forward pass of the glimpse layer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data used for evaluating the specified function\&. 
.br
\fIoutput\fP Resulting output activation\&. 
.RE
.PP

.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t const& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputHeight () const\fC [inline]\fP"

.PP
Get the input height\&. 
.PP
Definition at line 154 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputHeight ()\fC [inline]\fP"

.PP
Modify the input height\&. 
.PP
Definition at line 156 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputParameter () const\fC [inline]\fP"

.PP
Get the input parameter\&. 
.PP
Definition at line 127 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputParameter ()\fC [inline]\fP"

.PP
Modify the input parameter\&. 
.PP
Definition at line 129 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t const& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputWidth () const\fC [inline]\fP"

.PP
Get the input width\&. 
.PP
Definition at line 149 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::InputWidth ()\fC [inline]\fP"

.PP
Modify input the width\&. 
.PP
Definition at line 151 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Location (const arma::mat & location)\fC [inline]\fP"

.PP
Set the locationthe x and y coordinate of the center of the output glimpse\&. 
.PP
Definition at line 143 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t const& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputHeight () const\fC [inline]\fP"

.PP
Get the output height\&. 
.PP
Definition at line 164 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputHeight ()\fC [inline]\fP"

.PP
Modify the output height\&. 
.PP
Definition at line 166 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 132 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 134 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t const& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputWidth () const\fC [inline]\fP"

.PP
Get the output width\&. 
.PP
Definition at line 159 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t& \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::OutputWidth ()\fC [inline]\fP"

.PP
Modify the output width\&. 
.PP
Definition at line 161 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Pooling (const size_t kSize, const arma::Mat< eT > & input, arma::Mat< eT > & output)\fC [inline]\fP, \fC [private]\fP"

.PP
Apply pooling to the input and store the results to the output parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkSize\fP the kernel size used to perform the pooling operation\&. 
.br
\fIinput\fP The input to be apply the pooling rule\&. 
.br
\fIoutput\fP The pooled result\&. 
.RE
.PP

.PP
Definition at line 221 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::ReSampling (const arma::Mat< eT > & input, arma::Mat< eT > & output)\fC [inline]\fP, \fC [private]\fP"

.PP
Apply ReSampling to the input and store the results in the output parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The input to be apply the ReSampling rule\&. 
.br
\fIoutput\fP The pooled result\&. 
.RE
.PP

.PP
Definition at line 279 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename Archive > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Serialize (Archive & ar, const unsigned int)"

.PP
Serialize the layer\&. 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Transform (arma::mat & w)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 185 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Transform (arma::cube & w)\fC [inline]\fP, \fC [private]\fP"

.PP
Definition at line 203 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> template<typename eT > void \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::Unpooling (const arma::Mat< eT > & input, const arma::Mat< eT > & error, arma::Mat< eT > & output)\fC [inline]\fP, \fC [private]\fP"

.PP
Apply unpooling to the input and store the results\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The input to be apply the unpooling rule\&. 
.br
\fIerror\fP The error used to perform the unpooling operation\&. 
.br
\fIoutput\fP The pooled result\&. 
.RE
.PP

.PP
Definition at line 247 of file glimpse\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::delta\fC [private]\fP"

.PP
Locally-stored delta object\&. 
.PP
Definition at line 391 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::depth\fC [private]\fP"

.PP
The number of patches to crop per glimpse\&. 
.PP
Definition at line 373 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> bool \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::deterministic\fC [private]\fP"

.PP
If true use maximum a posteriori during the forward pass\&. 
.PP
Definition at line 421 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::cube \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::gTemp\fC [private]\fP"

.PP
Location-stored transformed gradient paramter\&. 
.PP
Definition at line 418 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inputDepth\fC [private]\fP"

.PP
Locally-stored depth of the input\&. 
.PP
Definition at line 400 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inputHeight\fC [private]\fP"

.PP
Locally-stored input height\&. 
.PP
Definition at line 382 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> InputDataType \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inputParameter\fC [private]\fP"

.PP
Locally-stored input parameter object\&. 
.PP
Definition at line 394 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::cube \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inputTemp\fC [private]\fP"

.PP
Locally-stored transformed input parameter\&. 
.PP
Definition at line 403 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inputWidth\fC [private]\fP"

.PP
Locally-stored input width\&. 
.PP
Definition at line 379 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::inSize\fC [private]\fP"

.PP
The size of the input units\&. 
.PP
Definition at line 367 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::mat \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::location\fC [private]\fP"

.PP
The x and y coordinate of the center of the output glimpse\&. 
.PP
Definition at line 409 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> std::vector<arma::mat> \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::locationParameter\fC [private]\fP"

.PP
Location-stored module location parameter\&. 
.PP
Definition at line 415 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::outputHeight\fC [private]\fP"

.PP
Locally-stored output height\&. 
.PP
Definition at line 388 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> OutputDataType \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::outputParameter\fC [private]\fP"

.PP
Locally-stored output parameter object\&. 
.PP
Definition at line 397 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> arma::cube \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::outputTemp\fC [private]\fP"

.PP
Locally-stored transformed output parameter\&. 
.PP
Definition at line 406 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::outputWidth\fC [private]\fP"

.PP
Locally-stored output width\&. 
.PP
Definition at line 385 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> \fBMeanPoolingRule\fP \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::pooling\fC [private]\fP"

.PP
Locally-stored object to perform the mean pooling operation\&. 
.PP
Definition at line 412 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::scale\fC [private]\fP"

.PP
The scale fraction\&. 
.PP
Definition at line 376 of file glimpse\&.hpp\&.
.SS "template<typename InputDataType  = arma::mat, typename OutputDataType  = arma::mat> size_t \fBmlpack::ann::Glimpse\fP< InputDataType, OutputDataType >::size\fC [private]\fP"

.PP
The used glimpse size (height = width)\&. 
.PP
Definition at line 370 of file glimpse\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
