.TH "mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType >" 3 "Sat Mar 25 2017" "Version master" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType > \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBbound::HRectBound\fP< \fBmetric::EuclideanDistance\fP, \fBElemType\fP > \fBBoundType\fP"
.br
.RI "\fIThe bound type held by the auxiliary information\&. \fP"
.ti -1c
.RI "typedef TreeType::ElemType \fBElemType\fP"
.br
.RI "\fIThe element type held by the tree\&. \fP"
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRPlusPlusTreeAuxiliaryInformation\fP ()"
.br
.RI "\fIConstruct the auxiliary information object\&. \fP"
.ti -1c
.RI "\fBRPlusPlusTreeAuxiliaryInformation\fP (const TreeType *)"
.br
.RI "\fIConstruct this as an auxiliary information for the given node\&. \fP"
.ti -1c
.RI "\fBRPlusPlusTreeAuxiliaryInformation\fP (const \fBRPlusPlusTreeAuxiliaryInformation\fP &other, TreeType *tree, bool=true)"
.br
.RI "\fICreate an auxiliary information object by copying from another object\&. \fP"
.ti -1c
.RI "\fBRPlusPlusTreeAuxiliaryInformation\fP (\fBRPlusPlusTreeAuxiliaryInformation\fP &&other)"
.br
.RI "\fICreate an auxiliary information object by moving from another node\&. \fP"
.ti -1c
.RI "bool \fBHandleNodeInsertion\fP (TreeType *, TreeType *, bool)"
.br
.RI "\fISome tree types require to save some properties at the insertion process\&. \fP"
.ti -1c
.RI "bool \fBHandleNodeRemoval\fP (TreeType *, const size_t)"
.br
.RI "\fISome tree types require to save some properties at the deletion process\&. \fP"
.ti -1c
.RI "bool \fBHandlePointDeletion\fP (TreeType *, const size_t)"
.br
.RI "\fISome tree types require to save some properties at the deletion process\&. \fP"
.ti -1c
.RI "bool \fBHandlePointInsertion\fP (TreeType *, const size_t)"
.br
.RI "\fISome tree types require to save some properties at the insertion process\&. \fP"
.ti -1c
.RI "void \fBNullifyData\fP ()"
.br
.RI "\fINullify the auxiliary information in order to prevent an invalid free\&. \fP"
.ti -1c
.RI "\fBBoundType\fP & \fBOuterBound\fP ()"
.br
.RI "\fIReturn the maximum bounding rectangle\&. \fP"
.ti -1c
.RI "const \fBBoundType\fP & \fBOuterBound\fP () const "
.br
.RI "\fIModify the maximum bounding rectangle\&. \fP"
.ti -1c
.RI "template<typename Archive > void \fBSerialize\fP (Archive &, const unsigned int)"
.br
.RI "\fISerialize the information\&. \fP"
.ti -1c
.RI "void \fBSplitAuxiliaryInfo\fP (TreeType *treeOne, TreeType *treeTwo, const size_t axis, const \fBElemType\fP cut)"
.br
.RI "\fIThe R++ tree requires to split the maximum bounding rectangle of a node that is being split\&. \fP"
.ti -1c
.RI "bool \fBUpdateAuxiliaryInfo\fP (TreeType *)"
.br
.RI "\fISome tree types require to propagate the information upward\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBBoundType\fP \fBouterBound\fP"
.br
.RI "\fIThe maximum bounding rectangle\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename TreeType>
.br
class mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType >"

.PP
Definition at line 24 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename TreeType > typedef \fBbound::HRectBound\fP<\fBmetric::EuclideanDistance\fP, \fBElemType\fP> \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBBoundType\fP"

.PP
The bound type held by the auxiliary information\&. 
.PP
Definition at line 30 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.SS "template<typename TreeType > typedef TreeType::ElemType \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBElemType\fP"

.PP
The element type held by the tree\&. 
.PP
Definition at line 28 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename TreeType > \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBRPlusPlusTreeAuxiliaryInformation\fP ()"

.PP
Construct the auxiliary information object\&. 
.SS "template<typename TreeType > \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBRPlusPlusTreeAuxiliaryInformation\fP (const TreeType *)"

.PP
Construct this as an auxiliary information for the given node\&. 
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node that stores this auxiliary information\&. 
.RE
.PP

.SS "template<typename TreeType > \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBRPlusPlusTreeAuxiliaryInformation\fP (const \fBRPlusPlusTreeAuxiliaryInformation\fP< TreeType > & other, TreeType * tree, bool = \fCtrue\fP)"

.PP
Create an auxiliary information object by copying from another object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Another auxiliary information object from which the information will be copied\&. 
.br
\fItree\fP The node that holds the auxiliary information\&. 
.br
\fIdeepCopy\fP If false, the new object uses the same memory (not used here)\&. 
.RE
.PP

.SS "template<typename TreeType > \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::\fBRPlusPlusTreeAuxiliaryInformation\fP (\fBRPlusPlusTreeAuxiliaryInformation\fP< TreeType > && other)"

.PP
Create an auxiliary information object by moving from another node\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP The auxiliary information object from which the information will be moved\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename TreeType > bool \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::HandleNodeInsertion (TreeType *, TreeType *, bool)"

.PP
Some tree types require to save some properties at the insertion process\&. This method allows the auxiliary information the option of manipulating the tree in order to perform the insertion process\&. If the auxiliary information does that, then the method should return true; if the method returns false the \fBRectangleTree\fP performs its default behavior\&.
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node in which the nodeToInsert is being inserted\&. 
.br
\fInodeToInsert\fP The node being inserted\&. 
.br
\fIinsertionLevel\fP The level of the tree at which the nodeToInsert should be inserted\&. 
.RE
.PP

.SS "template<typename TreeType > bool \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::HandleNodeRemoval (TreeType *, const size_t)"

.PP
Some tree types require to save some properties at the deletion process\&. This method allows the auxiliary information the option of manipulating the tree in order to perform the deletion process\&. If the auxiliary information does that, then the method should return true; if the method returns false the \fBRectangleTree\fP performs its default behavior\&.
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node from which the node is being deleted\&. 
.br
\fInodeIndex\fP The local index of the node being deleted\&. 
.RE
.PP

.SS "template<typename TreeType > bool \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::HandlePointDeletion (TreeType *, const size_t)"

.PP
Some tree types require to save some properties at the deletion process\&. This method allows the auxiliary information the option of manipulating the tree in order to perform the deletion process\&. If the auxiliary information does that, then the method should return true; if the method returns false the \fBRectangleTree\fP performs its default behavior\&.
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node from which the point is being deleted\&. 
.br
\fIlocalIndex\fP The local index of the point being deleted\&. 
.RE
.PP

.SS "template<typename TreeType > bool \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::HandlePointInsertion (TreeType *, const size_t)"

.PP
Some tree types require to save some properties at the insertion process\&. This method allows the auxiliary information the option of manipulating the tree in order to perform the insertion process\&. If the auxiliary information does that, then the method should return true; if the method returns false the \fBRectangleTree\fP performs its default behavior\&.
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node in which the point is being inserted\&. 
.br
\fIpoint\fP The global number of the point being inserted\&. 
.RE
.PP

.SS "template<typename TreeType > void \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::NullifyData ()"

.PP
Nullify the auxiliary information in order to prevent an invalid free\&. 
.SS "template<typename TreeType > \fBBoundType\fP& \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::OuterBound ()\fC [inline]\fP"

.PP
Return the maximum bounding rectangle\&. 
.PP
Definition at line 146 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.PP
References mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType >::outerBound\&.
.SS "template<typename TreeType > const \fBBoundType\fP& \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::OuterBound () const\fC [inline]\fP"

.PP
Modify the maximum bounding rectangle\&. 
.PP
Definition at line 149 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.PP
References mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType >::outerBound\&.
.SS "template<typename TreeType > template<typename Archive > void \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::Serialize (Archive &, const unsigned int)"

.PP
Serialize the information\&. 
.SS "template<typename TreeType > void \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::SplitAuxiliaryInfo (TreeType * treeOne, TreeType * treeTwo, const size_t axis, const \fBElemType\fP cut)"

.PP
The R++ tree requires to split the maximum bounding rectangle of a node that is being split\&. This method is intended for that\&.
.PP
\fBParameters:\fP
.RS 4
\fItreeOne\fP The first subtree\&. 
.br
\fItreeTwo\fP The second subtree\&. 
.br
\fIaxis\fP The axis along which the split is performed\&. 
.br
\fIcut\fP The coordinate at which the node is split\&. 
.RE
.PP

.SS "template<typename TreeType > bool \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::UpdateAuxiliaryInfo (TreeType *)"

.PP
Some tree types require to propagate the information upward\&. This method should return false if this is not the case\&. If true is returned, the update will be propagated upward\&.
.PP
\fBParameters:\fP
.RS 4
\fInode\fP The node in which the auxiliary information being update\&. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "template<typename TreeType > \fBBoundType\fP \fBmlpack::tree::RPlusPlusTreeAuxiliaryInformation\fP< TreeType >::outerBound\fC [private]\fP"

.PP
The maximum bounding rectangle\&. 
.PP
Definition at line 152 of file r_plus_plus_tree_auxiliary_information\&.hpp\&.
.PP
Referenced by mlpack::tree::RPlusPlusTreeAuxiliaryInformation< TreeType >::OuterBound()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
